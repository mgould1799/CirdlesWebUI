{"ast":null,"code":"import _regeneratorRuntime from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport * as d3 from \"d3-dsv\";\nexport var FORMAT_M21 = \"multi2one\";\nexport var FORMAT_DATE = \"dateFormat\";\nexport var FORMAT_CONV = \"conversion\";\nexport var FORMAT_121 = \"one2one\";\nexport var CM = \"cm\";\nexport var MM = \"mm\";\nexport function readToText(_x) {\n  return _readToText.apply(this, arguments);\n}\n\nfunction _readToText() {\n  _readToText = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(file) {\n    var temporaryFileReader;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            temporaryFileReader = new FileReader();\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              temporaryFileReader.onerror = function () {\n                temporaryFileReader.abort();\n                reject(new DOMException(\"Problem parsing input file.\"));\n              };\n\n              temporaryFileReader.onload = function () {\n                resolve(temporaryFileReader.result);\n              };\n\n              temporaryFileReader.readAsText(file);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _readToText.apply(this, arguments);\n}\n\n;\nexport function fileTextToState(_x2) {\n  return _fileTextToState.apply(this, arguments);\n} //this.state.fields.\"each\"\n// export function kallBack(sesarValues,userField,format){ //on button click toggles disable for option and sets mapping variable\n//     if(sesarValues.selectedField.length > 1) console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1\")\n//     console.log(\"vallbacking\",sesarValues,\"uf\",userField,\"form\",format)\n//     // disableUserField(userField);\n//     this.disableSesarFields(sesarValues);\n//     this.addToBeMapped(userField,sesarValues,format)\n//     this.setUserField(userField,sesarValues);\n// };\n\nfunction _fileTextToState() {\n  _fileTextToState = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(fileContents) {\n    var userFields, tempStateObject;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            userFields = d3.csvParse(fileContents); // console.log(\"CSV\", userFields)//all data\n            // console.log(\"cols:\", userFields.columns) //column names\n            // console.log(\"uf0\", userFields[0]); //column,value of first inputs\n\n            tempStateObject = {};\n            Object.keys(userFields[0]).map(function (each) {\n              tempStateObject[each] = {\n                disabled: false,\n                exampleValue: userFields[0][each] //logs first value of field\n\n              };\n            });\n            return _context2.abrupt(\"return\", tempStateObject);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fileTextToState.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/meagangould/Desktop/MarsMapMaker/src/components/BuilderComponents/Helpers/FileHelpers.js"],"names":["React","d3","FORMAT_M21","FORMAT_DATE","FORMAT_CONV","FORMAT_121","CM","MM","readToText","file","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsText","fileTextToState","fileContents","userFields","csvParse","tempStateObject","Object","keys","map","each","disabled","exampleValue"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,QAApB;AAGI,OAAO,IAAMC,UAAU,GAAG,WAAnB;AACP,OAAO,IAAMC,WAAW,GAAG,YAApB;AACP,OAAO,IAAMC,WAAW,GAAG,YAApB;AACP,OAAO,IAAMC,UAAU,GAAG,SAAnB;AACP,OAAO,IAAMC,EAAE,GAAG,IAAX;AACP,OAAO,IAAMC,EAAE,GAAG,IAAX;AAGT,gBAAuBC,UAAvB;AAAA;AAAA;;;;;2BAAQ,iBAA0BC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,YAAAA,mBAFJ,GAE0B,IAAIC,UAAJ,EAF1B;AAAA,6CAIK,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCJ,cAAAA,mBAAmB,CAACK,OAApB,GAA8B,YAAM;AAChCL,gBAAAA,mBAAmB,CAACM,KAApB;AACAF,gBAAAA,MAAM,CAAC,IAAIG,YAAJ,CAAiB,6BAAjB,CAAD,CAAN;AACH,eAHD;;AAKAP,cAAAA,mBAAmB,CAACQ,MAApB,GAA6B,YAAM;AAC/BL,gBAAAA,OAAO,CAACH,mBAAmB,CAACS,MAArB,CAAP;AACH,eAFD;;AAGAT,cAAAA,mBAAmB,CAACU,UAApB,CAA+BX,IAA/B;AACH,aAVM,CAJL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBL;AAGF,gBAAsBY,eAAtB;AAAA;AAAA,C,CAeE;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;2BAzBU,kBAA+BC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,YAAAA,UADF,GACetB,EAAE,CAACuB,QAAH,CAAYF,YAAZ,CADf,EAEF;AACA;AACA;;AACIG,YAAAA,eALF,GAKoB,EALpB;AAMFC,YAAAA,MAAM,CAACC,IAAP,CAAYJ,UAAU,CAAC,CAAD,CAAtB,EAA2BK,GAA3B,CAA+B,UAAAC,IAAI,EAAI;AAE/BJ,cAAAA,eAAe,CAACI,IAAD,CAAf,GAAwB;AACpBC,gBAAAA,QAAQ,EAAE,KADU;AAEpBC,gBAAAA,YAAY,EAAER,UAAU,CAAC,CAAD,CAAV,CAAcM,IAAd,CAFM,CAGtB;;AAHsB,eAAxB;AAIH,aANL;AANE,8CAcKJ,eAdL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3-dsv\";\n\n\n    export const FORMAT_M21 = \"multi2one\";\n    export const FORMAT_DATE = \"dateFormat\";\n    export const FORMAT_CONV = \"conversion\";\n    export const FORMAT_121 = \"one2one\";\n    export const CM = \"cm\";\n    export const MM = \"mm\";\n\n\n  export  async function readToText(file) {\n\n        const temporaryFileReader = new FileReader();\n\n        return new Promise((resolve, reject) => {\n            temporaryFileReader.onerror = () => {\n                temporaryFileReader.abort();\n                reject(new DOMException(\"Problem parsing input file.\"));\n            };\n\n            temporaryFileReader.onload = () => {\n                resolve(temporaryFileReader.result);\n            };\n            temporaryFileReader.readAsText(file);\n        });\n\n    };\n\n\n   export async function fileTextToState(fileContents) {\n        var userFields = d3.csvParse(fileContents)\n        // console.log(\"CSV\", userFields)//all data\n        // console.log(\"cols:\", userFields.columns) //column names\n        // console.log(\"uf0\", userFields[0]); //column,value of first inputs\n        var tempStateObject = {}\n        Object.keys(userFields[0]).map(each => {\n\n                tempStateObject[each] = {\n                    disabled: false,\n                    exampleValue: userFields[0][each]\n                } //logs first value of field\n            }\n        )\n        return tempStateObject;\n    }//this.state.fields.\"each\"\n\n\n// export function kallBack(sesarValues,userField,format){ //on button click toggles disable for option and sets mapping variable\n//     if(sesarValues.selectedField.length > 1) console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1\")\n//     console.log(\"vallbacking\",sesarValues,\"uf\",userField,\"form\",format)\n//     // disableUserField(userField);\n//     this.disableSesarFields(sesarValues);\n//     this.addToBeMapped(userField,sesarValues,format)\n//     this.setUserField(userField,sesarValues);\n// };"]},"metadata":{},"sourceType":"module"}