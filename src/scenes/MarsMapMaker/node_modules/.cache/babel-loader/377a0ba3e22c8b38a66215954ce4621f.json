{"ast":null,"code":"import _objectSpread from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/meagangould/Desktop/MarsMapMaker/src/components/BuilderComponents/Main/DefaultInfo.js\";\nimport React, { Component } from 'react';\nimport \"../../css/MapBuilder.css\";\nimport { renderDateFormat } from \"../Helpers/FileHelpers\";\nimport { UnitFormatter } from \"./UnitFormatter\";\nimport { defaultInfoOptions } from \"../Helpers/renderSelectOptions\";\n\nvar DefaultInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DefaultInfo, _Component);\n\n  function DefaultInfo(props) {\n    var _this;\n\n    _classCallCheck(this, DefaultInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DefaultInfo).call(this, props));\n\n    _this.setField = function (e) {\n      _this.setState(_objectSpread({}, _this.state, {\n        exampleValue: _this.props.userFields[e.target.value].exampleValue\n      }));\n    };\n\n    _this.toggleRender = function () {\n      console.log(\"toggle render\");\n\n      _this.setState(function (prevState) {\n        return {\n          doRender: !_this.state.doRender\n        };\n      });\n    };\n\n    _this.renderDateFormatted = function () {\n      var _this$state = _this.state,\n          dateInput = _this$state.dateInput,\n          exampleValue = _this$state.exampleValue;\n\n      if (dateInput) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \" According to your mapping: \"), React.createElement(\"line\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Year : \", exampleValue.substring(dateInput.indexOf(\"Y\"), dateInput.lastIndexOf(\"Y\") + 1)), React.createElement(\"line\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Day : \", exampleValue.substring(dateInput.indexOf(\"D\"), dateInput.lastIndexOf(\"D\") + 1)), React.createElement(\"line\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Month : \", exampleValue.substring(dateInput.indexOf(\"M\"), dateInput.lastIndexOf(\"M\") + 1)));\n      } else return null;\n    };\n\n    _this.RenderSelect = function () {\n      return React.createElement(\"div\", {\n        className: \"fieldElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Select a field that is a date\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"sel2\",\n        name: \"sellist2\",\n        onChange: function onChange(e) {\n          return _this.setField(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, defaultInfoOptions(_this.props.userFields)), _this.renderDateFormatted());\n    };\n\n    _this.renderInput = function () {\n      var helpText = React.createElement(\"div\", {\n        className: \"verify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"line\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Below is example data pulled from your CSV\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \" \", React.createElement(\"line\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Replace digits representing Year with 'Y'\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \" \", React.createElement(\"line\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Replace digits representing Month with 'M'\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \" \", React.createElement(\"line\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Replace digits representing Day with 'D'\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \" \", React.createElement(\"line\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Replace every other character or whitespace with an X\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \" \", React.createElement(\"line\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Example: 2017-04-27 20:14EST to YYYYXMMXDDXXXXXXXXX\"));\n      if (_this.state.exampleValue) return React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, helpText, React.createElement(\"input\", {\n        onChange: function onChange(event) {\n          return _this.setState({\n            dateInput: event.target.value\n          });\n        },\n        id: \"dateTxtBox\",\n        defaultValue: _this.state.exampleValue ? _this.state.exampleValue : \"SELECT FIELD\",\n        onBlur: function onBlur() {\n          return _this.props.setDateFormatting(_this.state.dateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = {\n      dateInput: \"\",\n      doRender: true\n    };\n    return _this;\n  }\n\n  _createClass(DefaultInfo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (Object.keys(this.props.userFields).length > 0 && this.state.doRender) {\n        return React.createElement(\"div\", {\n          className: \"fieldContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"verify\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \" Default Mapping Configuration \")), React.createElement(\"div\", {\n          className: \"subContainer fieldElement\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"fieldElement\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"verify\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Configure Date Format\"), React.createElement(this.RenderSelect, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), this.renderInput()), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })), React.createElement(UnitFormatter, {\n          setUnit: this.props.setUnit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.toggleRender();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Done?\"));\n      }\n\n      if (!this.state.doRender) {\n        return React.createElement(\"div\", {\n          className: \"fieldElement\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Change Date formatting?\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.toggleRender();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Edit\"));\n      } else return null;\n    }\n  }]);\n\n  return DefaultInfo;\n}(Component);\n\nexport default DefaultInfo;","map":{"version":3,"sources":["/home/meagangould/Desktop/MarsMapMaker/src/components/BuilderComponents/Main/DefaultInfo.js"],"names":["React","Component","renderDateFormat","UnitFormatter","defaultInfoOptions","DefaultInfo","props","setField","e","setState","state","exampleValue","userFields","target","value","toggleRender","console","log","prevState","doRender","renderDateFormatted","dateInput","substring","indexOf","lastIndexOf","RenderSelect","renderInput","helpText","event","setDateFormatting","Object","keys","length","setUnit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport \"../../css/MapBuilder.css\"\nimport {renderDateFormat} from \"../Helpers/FileHelpers\";\nimport {UnitFormatter} from \"./UnitFormatter\";\nimport {defaultInfoOptions} from \"../Helpers/renderSelectOptions\"\n\n\nclass DefaultInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {dateInput : \"\",\n                        doRender:true}\n    }\n\n    setField = (e) => {\n        this.setState({...this.state,exampleValue: this.props.userFields[e.target.value].exampleValue})\n    };\n\n    toggleRender=()=>{\n        console.log(\"toggle render\")\n        this.setState(prevState=> ({doRender: !this.state.doRender}))\n    }\n\n\n\n    renderDateFormatted= () =>{\n        const {dateInput, exampleValue} = this.state;\n\n\n\n        if(dateInput){\n            return(  <div>\n                <h4 > According to your mapping: </h4>\n               <line>Year : {exampleValue.substring(dateInput.indexOf(\"Y\"),dateInput.lastIndexOf(\"Y\")+1)}</line>\n               <line>Day : {exampleValue.substring(dateInput.indexOf(\"D\"),dateInput.lastIndexOf(\"D\")+1)}</line>\n               <line>Month : {exampleValue.substring(dateInput.indexOf(\"M\"),dateInput.lastIndexOf(\"M\")+1)}</line>\n                </div>)\n        }\n        else return null;\n\n    }\n\n\n\n\n\n    RenderSelect=()=>{\n\n        return(\n            <div className=\"fieldElement\" >\n\n            <a>Select a field that is a date</a>\n            <select className=\"form-control\" id=\"sel2\" name=\"sellist2\" onChange={(e)=>this.setField(e)}>\n                {defaultInfoOptions(this.props.userFields)}\n            </select>\n                {this.renderDateFormatted()}\n        </div>)\n        };\n\n\n    renderInput =() =>{\n        const helpText =(<div className=\"verify\">\n            <line>Below is example data pulled from your CSV</line>\n            <br/> <line>Replace digits representing Year with 'Y'</line>\n            <br/> <line>Replace digits representing Month with 'M'</line>\n            <br/> <line>Replace digits representing Day with 'D'</line>\n            <br/> <line>Replace every other character or whitespace with an X</line>\n            <br/> <line>Example: 2017-04-27 20:14EST to YYYYXMMXDDXXXXXXXXX</line>\n        </div>)\n\n        if(this.state.exampleValue)\n        return (<div className={\"inline\"}>\n                {helpText}\n                <input onChange={event => this.setState({dateInput: event.target.value})} id=\"dateTxtBox\"\n                      defaultValue={(this.state.exampleValue)?this.state.exampleValue: \"SELECT FIELD\"}\n                        onBlur={()=>this.props.setDateFormatting(this.state.dateInput)}>\n                </input>\n            </div>\n    )\n            }\n\n\n    render() {\n\n    if(Object.keys(this.props.userFields).length >0 && this.state.doRender ){\n        return (\n            <div className=\"fieldContainer\">\n                <div ><h3 className={\"verify\"} > Default Mapping Configuration </h3></div>\n            <div className=\"subContainer fieldElement\" >\n\n\n\n                <div className=\"fieldElement\">\n                    <h4 className={\"verify\"}>Configure Date Format</h4>\n                <this.RenderSelect  />\n                    {this.renderInput()}\n                </div>\n\n                <br/>\n\n                </div>\n\n                <UnitFormatter setUnit ={this.props.setUnit} />\n\n                <button  onClick={()=>this.toggleRender() }  >Done?</button>\n\n\n            </div>\n                );\n    }if(!this.state.doRender){\n        return(\n            <div className='fieldElement'>\n                <h4>Change Date formatting?</h4>\n                <button onClick={()=>this.toggleRender()}>Edit</button>\n            </div>)\n        }\n    else return null\n}}\n\nexport default DefaultInfo;"]},"metadata":{},"sourceType":"module"}