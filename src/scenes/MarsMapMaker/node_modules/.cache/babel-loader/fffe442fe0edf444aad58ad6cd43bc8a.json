{"ast":null,"code":"import _slicedToArray from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/meagangould/Desktop/MarsMapMaker/src/components/BuilderComponents/Main/XRenderFormats.js\";\nimport React, { Component } from 'react';\nimport { FormatSwitch } from \"./FormatSwitcher\";\nimport \"../../css/MapBuilder.css\";\nimport { firstMapOptions } from \"../Helpers/renderSelectOptions\";\nimport { handleOptionSelect } from \"../Helpers/CallBacks\";\nimport AddFieldButton from \"./AddFieldButton\";\nimport Multi2One from \"../Multi2One\";\nimport { CM, FORMAT_121, FORMAT_CONV, FORMAT_DATE, FORMAT_M21, MM } from \"../Helpers/FileHelpers\";\nimport { isEmpty } from \"lodash\";\n\nvar XRenderFormats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(XRenderFormats, _Component);\n\n  function XRenderFormats(props) {\n    var _this;\n\n    _classCallCheck(this, XRenderFormats);\n\n    console.log(\"in render formats\");\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(XRenderFormats).call(this, props));\n\n    _this.handleSelect = function (event) {\n      var e = event;\n      var wasSelected = _this.state.selectedField;\n      var isProperEvent = e.target != null;\n      var val = event.target != null ? event.target.value : event;\n      console.log(\"THIS IS VAL\", val);\n      var stateObj; //handles submission of default  \"SELECT FIELD\" option\n\n      if (val === \"NULL\") {\n        stateObj = {\n          format: null,\n          selectedField: null,\n          disabledSelf: val !== \"NULL\"\n        };\n      } else {\n        stateObj = {\n          format: _this.props.sesarFields[val].format,\n          selectedField: val,\n          disabledSelf: val !== \"NULL\"\n        };\n      }\n\n      _this.setState(stateObj, function () {\n        if (isProperEvent) {\n          _this.props.callBack(_this.state, _this.props.userField.fieldName, _this.state.format, val !== wasSelected ? wasSelected : null);\n        }\n      });\n    };\n\n    _this.addField = function (e) {\n      console.log(\"goin here\");\n\n      _this.setState(function (preState) {\n        return {\n          addField: preState.addField + 1\n        };\n      }, _this.props.addExtraM21Field(_this.state.selectedField));\n    };\n\n    _this.minusField = function (format) {\n      console.log(\"minusField\");\n      if (format === FORMAT_M21) _this.setState(function (preState) {\n        return {\n          addField: preState.addField - 1\n        };\n      });else {\n        _this.setState(function (preState) {\n          return {\n            addField: 0\n          };\n        });\n      }\n    };\n\n    _this.isDisabled = function () {\n      return _this.props.userField.disabled && !_this.state.disabledSelf ? true : false;\n    };\n\n    _this.registerExtraFields = function (fields) {\n      return _this.setState({\n        extraUserFields: fields\n      });\n    };\n\n    _this.conversionFormat = function (field) {\n      var _this$props = _this.props,\n          allUserFields = _this$props.allUserFields,\n          userField = _this$props.userField,\n          defaultUnit = _this$props.defaultUnit,\n          mapValues = _this$props.mapValues;\n      var selectedField = _this.state.selectedField;\n      console.log(\"MAPVALFIELD\", mapValues[field], mapValues[field] === undefined);\n\n      if (mapValues[field] !== undefined) {\n        console.log(\"allUserFields[mapValues[selectedField].userValues[0]]\", allUserFields[mapValues[selectedField].userValues[0]]);\n        console.log(\"mapValues[selectedField]\", mapValues[selectedField]);\n        var defaultVal = allUserFields[mapValues[selectedField].userValues[0]].exampleValue;\n        var extraVal = \"\";\n\n        if (mapValues[selectedField].userValues[1] !== undefined && mapValues[selectedField].userValues[1] !== \"NULL\") {\n          extraVal = allUserFields[mapValues[selectedField].userValues[1]].exampleValue;\n        } else {\n          extraVal = \"\";\n        }\n\n        ;\n        extraVal = extraVal === \"\" ? 0 : extraVal; // let defaultUnit = defaultUnit;\n\n        var scalar = 0;\n        var extraUnit = mapValues[selectedField].extra !== undefined ? mapValues[selectedField].extra.unit : \"NULL\";\n\n        if (defaultUnit === CM) {\n          if (extraUnit === MM) {\n            scalar = 1 / 10;\n          } else scalar = 1;\n        }\n\n        if (defaultUnit === MM) {\n          if (extraUnit === CM) {\n            scalar = 10;\n          } else scalar = 1;\n        }\n\n        return React.createElement(\"div\", {\n          className: \"inline verify\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, selectedField, \":\", Number(defaultVal) + Number(extraVal * scalar)));\n      }\n    };\n\n    _this.dateFormat = function (field, format) {\n      var _this$props2 = _this.props,\n          allUserFields = _this$props2.allUserFields,\n          userField = _this$props2.userField,\n          defaultUnit = _this$props2.defaultUnit,\n          mapValues = _this$props2.mapValues;\n      var selectedField = _this.state.selectedField;\n      var dateInput;\n      if (mapValues.userDateFormat === undefined) return React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"SET DATE FORMATTING AT TOP OF PAGE\");else dateInput = mapValues.userDateFormat;\n      if (mapValues.selectedField === undefined) return React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"NO MAP VALS\");\n\n      if (allUserFields[selectedField].exampleValue !== undefined) {\n        var exampleValue = allUserFields[selectedField].exampleValue;\n        var returnValue = exampleValue.substring(dateInput.indexOf(\"Y\"), dateInput.lastIndexOf(\"Y\") + 1) + \"-\" + exampleValue.substring(dateInput.indexOf(\"M\"), dateInput.lastIndexOf(\"M\") + 1) + \"-\" + exampleValue.substring(dateInput.indexOf(\"D\"), dateInput.lastIndexOf(\"D\") + 1);\n        return React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, selectedField, \":\", returnValue);\n      }\n\n      return \"SORRY\";\n    };\n\n    _this.m21Format = function (field, format) {\n      var _this$props3 = _this.props,\n          allUserFields = _this$props3.allUserFields,\n          userField = _this$props3.userField,\n          defaultUnit = _this$props3.defaultUnit,\n          mapValues = _this$props3.mapValues;\n      var selectedField = _this.state.selectedField;\n      var theseFields = mapValues[selectedField] !== undefined ? mapValues[selectedField].userValues : \" \";\n      console.log(\"M21 BBY\", theseFields, format);\n      var values = Object.entries(theseFields).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            each = _ref2[0],\n            value = _ref2[1];\n\n        console.log(\"wat each\", each, value, format);\n\n        if (allUserFields[value] !== undefined) {\n          if (format === FORMAT_M21) return React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, value, \":\", allUserFields[value].exampleValue, \",\");else return React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, allUserFields[value].exampleValue);\n        }\n      });\n      var example = format === FORMAT_M21 ? React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, selectedField, \": [\", values, \"]\") : React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, selectedField, \": \", values);\n      console.log(\"EX>\", example);\n      return React.createElement(\"div\", {\n        className: \"inline verify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, example);\n    };\n\n    _this.returnFieldMapValues = function (field, format) {\n      console.log(\"returnfieldmapvals\", field, format);\n      format = _this.state.selectedField === \"sample_comment\" ? FORMAT_M21 : format;\n      console.log(\"returnfieldmapvals\", field, format);\n      if (format === null) return \"\";\n\n      if (format === FORMAT_CONV) {\n        console.log(\"in format conv\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, _this.conversionFormat(field));\n      }\n\n      if (format === FORMAT_DATE) {\n        console.log(\"in format DATE\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, _this.dateFormat(field));\n      } else {\n        console.log(\"not format conv\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, _this.m21Format(field, format));\n      }\n    };\n\n    _this.state = {\n      format: null,\n      selectedField: null,\n      disabledSelf: false,\n      addField: 0\n    };\n    return _this;\n  }\n  /* it handles default event action in this component for selecting initial sesar field\n  * Also from One2One component handles sets disabledSelf property when reassignment to multiple format through, same flow\n  * */\n\n\n  _createClass(XRenderFormats, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.isDisabled()) {\n        return null;\n      } else return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card col-lg-10 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline col-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(AddFieldButton, {\n        allUserFields: this.props.sesarFields,\n        addFieldOnClick: function addFieldOnClick(e) {\n          return _this2.addField(e);\n        },\n        format: this.state.format,\n        selectedField: this.state.selectedField,\n        addExtraM21Field: this.props.addExtraM21Field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), React.createElement(FormatSwitch, Object.assign({}, this.props, {\n        // collapseOnFinish = {this.collapseOnFinish}\n        format: this.state.format //handleSelect={this.handleSelect}\n        ,\n        originField: this.props.userField.fieldName,\n        exampleValue: this.props.userField.exampleValue,\n        selectedField: this.state.selectedField,\n        addConversionValue: this.props.addConversionValue,\n        registerExtraFields: this.registerExtraFields,\n        defaultUnit: this.props.defaultUnit,\n        addFieldCount: this.state.addField,\n        minusField: this.minusField,\n        mapValues: this.props.mapValues,\n        setExtraM21Fields: this.props.setExtraM21Field,\n        removeM21Field: this.props.removeM21Field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-lg-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"sel2\",\n        name: \"sellist2\",\n        disabled: this.isDisabled(),\n        onChange: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, firstMapOptions(this.props.sesarFields, this.props.userField.fieldName))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, this.returnFieldMapValues(this.state.selectedField, this.state.format)))));\n    }\n  }]);\n\n  return XRenderFormats;\n}(Component);\n\nexport default XRenderFormats;","map":{"version":3,"sources":["/home/meagangould/Desktop/MarsMapMaker/src/components/BuilderComponents/Main/XRenderFormats.js"],"names":["React","Component","FormatSwitch","firstMapOptions","handleOptionSelect","AddFieldButton","Multi2One","CM","FORMAT_121","FORMAT_CONV","FORMAT_DATE","FORMAT_M21","MM","isEmpty","XRenderFormats","props","console","log","handleSelect","event","e","wasSelected","state","selectedField","isProperEvent","target","val","value","stateObj","format","disabledSelf","sesarFields","setState","callBack","userField","fieldName","addField","preState","addExtraM21Field","minusField","isDisabled","disabled","registerExtraFields","fields","extraUserFields","conversionFormat","field","allUserFields","defaultUnit","mapValues","undefined","userValues","defaultVal","exampleValue","extraVal","scalar","extraUnit","extra","unit","Number","dateFormat","dateInput","userDateFormat","returnValue","substring","indexOf","lastIndexOf","m21Format","theseFields","values","Object","entries","map","each","example","returnFieldMapValues","addConversionValue","setExtraM21Field","removeM21Field"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,OAAO,0BAAP;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,EAAR,EAAYC,UAAZ,EAAwBC,WAAxB,EAAqCC,WAArC,EAAkDC,UAAlD,EAA8DC,EAA9D,QAAuE,wBAAvE;AACA,SAAQC,OAAR,QAAsB,QAAtB;;IAIMC,c;;;;;AAEF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEfC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,wFAAMF,KAAN;;AAHe,UAmBnBG,YAnBmB,GAmBN,UAACC,KAAD,EAAS;AAElB,UAAIC,CAAC,GAAGD,KAAR;AACA,UAAIE,WAAW,GAAG,MAAKC,KAAL,CAAWC,aAA7B;AACA,UAAIC,aAAa,GAAIJ,CAAC,CAACK,MAAF,IAAY,IAAjC;AACA,UAAIC,GAAG,GAAIP,KAAK,CAACM,MAAN,IAAgB,IAAjB,GAAwBN,KAAK,CAACM,MAAN,CAAaE,KAArC,GAA6CR,KAAvD;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BS,GAA1B;AACA,UAAIE,QAAJ,CAPkB,CASlB;;AACA,UAAGF,GAAG,KAAK,MAAX,EAAkB;AACdE,QAAAA,QAAQ,GAAG;AAACC,UAAAA,MAAM,EAAC,IAAR;AAAeN,UAAAA,aAAa,EAAC,IAA7B;AAAmCO,UAAAA,YAAY,EAAEJ,GAAG,KAAI;AAAxD,SAAX;AACH,OAFD,MAIK;AACDE,QAAAA,QAAQ,GAAG;AAACC,UAAAA,MAAM,EAAC,MAAKd,KAAL,CAAWgB,WAAX,CAAuBL,GAAvB,EAA4BG,MAApC;AAA6CN,UAAAA,aAAa,EAACG,GAA3D;AAAgEI,UAAAA,YAAY,EAAEJ,GAAG,KAAI;AAArF,SAAX;AACH;;AAED,YAAKM,QAAL,CAAcJ,QAAd,EACI,YAAM;AAAC,YAAGJ,aAAH,EAAiB;AACpB,gBAAKT,KAAL,CAAWkB,QAAX,CAAoB,MAAKX,KAAzB,EACI,MAAKP,KAAL,CAAWmB,SAAX,CAAqBC,SADzB,EAEI,MAAKb,KAAL,CAAWO,MAFf,EAGKH,GAAG,KAAGL,WAAP,GAAoBA,WAApB,GAAgC,IAHpC;AAIH;AACJ,OAPD;AASH,KA9CkB;;AAAA,UA2EnBe,QA3EmB,GA2ER,UAAChB,CAAD,EAAO;AAACJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAA0B,YAAKe,QAAL,CAAc,UAAAK,QAAQ;AAAA,eAAK;AAACD,UAAAA,QAAQ,EAACC,QAAQ,CAACD,QAAT,GAAkB;AAA5B,SAAL;AAAA,OAAtB,EAA2D,MAAKrB,KAAL,CAAWuB,gBAAX,CAA4B,MAAKhB,KAAL,CAAWC,aAAvC,CAA3D;AAAkH,KA3E5I;;AAAA,UA6EnBgB,UA7EmB,GA6EN,UAACV,MAAD,EAAY;AAACb,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAA2B,UAAGY,MAAM,KAAKlB,UAAd,EAA0B,MAAKqB,QAAL,CAAc,UAAAK,QAAQ;AAAA,eAAK;AAACD,UAAAA,QAAQ,EAACC,QAAQ,CAACD,QAAT,GAAkB;AAA5B,SAAL;AAAA,OAAtB,EAA1B,KACxB;AAAE,cAAKJ,QAAL,CAAc,UAAAK,QAAQ;AAAA,iBAAK;AAACD,YAAAA,QAAQ,EAAC;AAAV,WAAL;AAAA,SAAtB;AAA0C;AAAC,KA9EvD;;AAAA,UAkFnBI,UAlFmB,GAkFN,YAAK;AAAC,aAAQ,MAAKzB,KAAL,CAAWmB,SAAX,CAAqBO,QAArB,IAAiC,CAAC,MAAKnB,KAAL,CAAWQ,YAA9C,GAA8D,IAA9D,GAAoE,KAA3E;AAAiF,KAlFjF;;AAAA,UAwFnBY,mBAxFmB,GAwFC,UAACC,MAAD;AAAA,aAAW,MAAKX,QAAL,CAAc;AAACY,QAAAA,eAAe,EAACD;AAAjB,OAAd,CAAX;AAAA,KAxFD;;AAAA,UA0FnBE,gBA1FmB,GA0FA,UAACC,KAAD,EAAW;AAAA,wBAC+B,MAAK/B,KADpC;AAAA,UACrBgC,aADqB,eACrBA,aADqB;AAAA,UACNb,SADM,eACNA,SADM;AAAA,UACKc,WADL,eACKA,WADL;AAAA,UACkBC,SADlB,eACkBA,SADlB;AAAA,UAErB1B,aAFqB,GAEJ,MAAKD,KAFD,CAErBC,aAFqB;AAI1BP,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BgC,SAAS,CAACH,KAAD,CAAnC,EAA2CG,SAAS,CAACH,KAAD,CAAT,KAAqBI,SAAhE;;AACA,UAAGD,SAAS,CAACH,KAAD,CAAT,KAAqBI,SAAxB,EAAkC;AAC9BlC,QAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ,EAAoE8B,aAAa,CAACE,SAAS,CAAC1B,aAAD,CAAT,CAAyB4B,UAAzB,CAAoC,CAApC,CAAD,CAAjF;AACAnC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCgC,SAAS,CAAC1B,aAAD,CAAhD;AACA,YAAI6B,UAAU,GAAGL,aAAa,CAACE,SAAS,CAAC1B,aAAD,CAAT,CAAyB4B,UAAzB,CAAoC,CAApC,CAAD,CAAb,CAAsDE,YAAvE;AACA,YAAIC,QAAQ,GAAG,EAAf;;AACA,YAAGL,SAAS,CAAC1B,aAAD,CAAT,CAAyB4B,UAAzB,CAAoC,CAApC,MAA2CD,SAA3C,IACKD,SAAS,CAAC1B,aAAD,CAAT,CAAyB4B,UAAzB,CAAoC,CAApC,MAA2C,MADnD,EAC2D;AACvDG,UAAAA,QAAQ,GAAGP,aAAa,CAACE,SAAS,CAAC1B,aAAD,CAAT,CAAyB4B,UAAzB,CAAoC,CAApC,CAAD,CAAb,CAAsDE,YAAjE;AACH,SAHD,MAGO;AACHC,UAAAA,QAAQ,GAAG,EAAX;AAAe;;AAAC;AACpBA,QAAAA,QAAQ,GAAIA,QAAQ,KAAK,EAAd,GAAoB,CAApB,GAAwBA,QAAnC,CAV8B,CAW9B;;AACA,YAAIC,MAAM,GAAG,CAAb;AAEA,YAAIC,SAAS,GAAIP,SAAS,CAAC1B,aAAD,CAAT,CAAyBkC,KAAzB,KAAmCP,SAAnC,GACDD,SAAS,CAAC1B,aAAD,CAAT,CAAyBkC,KAAzB,CAA+BC,IAD9B,GACqC,MADtD;;AAEA,YAAIV,WAAW,KAAKzC,EAApB,EAAwB;AACpB,cAAIiD,SAAS,KAAK5C,EAAlB,EAAsB;AAClB2C,YAAAA,MAAM,GAAG,IAAI,EAAb;AACH,WAFD,MAGKA,MAAM,GAAC,CAAP;AACR;;AACD,YAAIP,WAAW,KAAKpC,EAApB,EAAwB;AACpB,cAAI4C,SAAS,KAAKjD,EAAlB,EAAsB;AAClBgD,YAAAA,MAAM,GAAG,EAAT;AACH,WAFD,MAGKA,MAAM,GAAC,CAAP;AAER;;AAGG,eACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKhC,aADL,OACsBoC,MAAM,CAACP,UAAD,CAAN,GAAqBO,MAAM,CAACL,QAAQ,GAAGC,MAAZ,CADjD,CADJ,CADJ;AAOP;AACJ,KAtIkB;;AAAA,UAwInBK,UAxImB,GAwIN,UAACd,KAAD,EAAOjB,MAAP,EAAiB;AAAA,yBAC+B,MAAKd,KADpC;AAAA,UACrBgC,aADqB,gBACrBA,aADqB;AAAA,UACNb,SADM,gBACNA,SADM;AAAA,UACKc,WADL,gBACKA,WADL;AAAA,UACkBC,SADlB,gBACkBA,SADlB;AAAA,UAGrB1B,aAHqB,GAGJ,MAAKD,KAHD,CAGrBC,aAHqB;AAI1B,UAAIsC,SAAJ;AAEA,UAAIZ,SAAS,CAACa,cAAV,KAA4BZ,SAAhC,EAA2C,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAP,CAA3C,KACSW,SAAS,GAAGZ,SAAS,CAACa,cAAtB;AACT,UAAGb,SAAS,CAAC1B,aAAV,KAA4B2B,SAA/B,EAA0C,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;;AAE1C,UAAGH,aAAa,CAACxB,aAAD,CAAb,CAA6B8B,YAA7B,KAA8CH,SAAjD,EAA2D;AACvD,YAAIG,YAAY,GAAGN,aAAa,CAACxB,aAAD,CAAb,CAA6B8B,YAAhD;AAEA,YAAIU,WAAW,GAAGV,YAAY,CAACW,SAAb,CAAuBH,SAAS,CAACI,OAAV,CAAkB,GAAlB,CAAvB,EAA8CJ,SAAS,CAACK,WAAV,CAAsB,GAAtB,IAA2B,CAAzE,IAA4E,GAA5E,GACdb,YAAY,CAACW,SAAb,CAAuBH,SAAS,CAACI,OAAV,CAAkB,GAAlB,CAAvB,EAA8CJ,SAAS,CAACK,WAAV,CAAsB,GAAtB,IAA2B,CAAzE,CADc,GAC8D,GAD9D,GAEdb,YAAY,CAACW,SAAb,CAAuBH,SAAS,CAACI,OAAV,CAAkB,GAAlB,CAAvB,EAA8CJ,SAAS,CAACK,WAAV,CAAsB,GAAtB,IAA2B,CAAzE,CAFJ;AAIA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI3C,aAAJ,OAAoBwC,WAApB,CAAP;AACH;;AACD,aAAO,OAAP;AACH,KA5JkB;;AAAA,UA8JnBI,SA9JmB,GA8JP,UAACrB,KAAD,EAAQjB,MAAR,EAAkB;AAAA,yBAC+B,MAAKd,KADpC;AAAA,UACrBgC,aADqB,gBACrBA,aADqB;AAAA,UACNb,SADM,gBACNA,SADM;AAAA,UACKc,WADL,gBACKA,WADL;AAAA,UACkBC,SADlB,gBACkBA,SADlB;AAAA,UAGrB1B,aAHqB,GAGJ,MAAKD,KAHD,CAGrBC,aAHqB;AAK1B,UAAI6C,WAAW,GAAGnB,SAAS,CAAC1B,aAAD,CAAT,KAA6B2B,SAA7B,GAAyCD,SAAS,CAAC1B,aAAD,CAAT,CAAyB4B,UAAlE,GAA+E,GAAjG;AACAnC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBmD,WAAtB,EAAmCvC,MAAnC;AAEA,UAAIwC,MAAM,GAAIC,MAAM,CAACC,OAAP,CAAeH,WAAf,EAA4BI,GAA5B,CACV,gBAAkB;AAAA;AAAA,YAAhBC,IAAgB;AAAA,YAAV9C,KAAU;;AACdX,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBwD,IAAvB,EAA4B9C,KAA5B,EAAmCE,MAAnC;;AACA,YAAGkB,aAAa,CAACpB,KAAD,CAAb,KAAyBuB,SAA5B,EAAuC;AACnC,cAAIrB,MAAM,KAAKlB,UAAf,EACI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIgB,KAAJ,OAAYoB,aAAa,CAACpB,KAAD,CAAb,CAAqB0B,YAAjC,MAAP,CADJ,KAGI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIN,aAAa,CAACpB,KAAD,CAAb,CAAqB0B,YAAzB,CAAP;AACP;AACJ,OATS,CAAd;AAUA,UAAIqB,OAAO,GAAK7C,MAAM,KAAKlB,UAAX,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIY,aAAJ,SAAsB8C,MAAtB,MAAxB,GAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI9C,aAAJ,QAAqB8C,MAArB,CAA7E;AACArD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkByD,OAAlB;AACA,aAAQ;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCA,OAAhC,CAAR;AACH,KAnLkB;;AAAA,UAqLnBC,oBArLmB,GAqLE,UAAC7B,KAAD,EAAOjB,MAAP,EAAgB;AACjCb,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC6B,KAAjC,EAAwCjB,MAAxC;AACAA,MAAAA,MAAM,GAAG,MAAKP,KAAL,CAAWC,aAAX,KAA6B,gBAA7B,GAAgDZ,UAAhD,GAA6DkB,MAAtE;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC6B,KAAjC,EAAwCjB,MAAxC;AAEA,UAAIA,MAAM,KAAK,IAAf,EAAqB,OAAO,EAAP;;AAErB,UAAGA,MAAM,KAAKpB,WAAd,EAA0B;AACtBO,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,MAAK4B,gBAAL,CAAsBC,KAAtB,CAAN,CAAR;AACH;;AACD,UAAGjB,MAAM,KAAKnB,WAAd,EAA0B;AACtBM,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,MAAK2C,UAAL,CAAgBd,KAAhB,CAAN,CAAR;AACH,OAHD,MAKA;AACI9B,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,MAAKkD,SAAL,CAAerB,KAAf,EAAqBjB,MAArB,CAAP,CAAP;AACH;AAGJ,KA5MkB;;AAIf,UAAKP,KAAL,GAAa;AAACO,MAAAA,MAAM,EAAE,IAAT;AACTN,MAAAA,aAAa,EAAC,IADL;AAETO,MAAAA,YAAY,EAAC,KAFJ;AAGTM,MAAAA,QAAQ,EAAC;AAHA,KAAb;AAJe;AAWlB;AAID;;;;;;;6BA+LS;AAAA;;AACL,UAAG,KAAKI,UAAL,EAAH,EAAsB;AAClB,eAAO,IAAP;AACH,OAFD,MAIK,OACD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,aAAa,EAAE,KAAKzB,KAAL,CAAWgB,WAA1C;AACgB,QAAA,eAAe,EAAE,yBAACX,CAAD;AAAA,iBAAK,MAAI,CAACgB,QAAL,CAAchB,CAAd,CAAL;AAAA,SADjC;AAEgB,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWO,MAFnC;AAGgB,QAAA,aAAa,EAAE,KAAKP,KAAL,CAAWC,aAH1C;AAIgB,QAAA,gBAAgB,EAAI,KAAKR,KAAL,CAAWuB,gBAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAQI,oBAAC,YAAD,oBACQ,KAAKvB,KADb;AAEG;AACC,QAAA,MAAM,EAAE,KAAKO,KAAL,CAAWO,MAHvB,CAII;AAJJ;AAKI,QAAA,WAAW,EAAE,KAAKd,KAAL,CAAWmB,SAAX,CAAqBC,SALtC;AAMI,QAAA,YAAY,EAAE,KAAKpB,KAAL,CAAWmB,SAAX,CAAqBmB,YANvC;AAOI,QAAA,aAAa,EAAE,KAAK/B,KAAL,CAAWC,aAP9B;AAQI,QAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAW6D,kBARnC;AASI,QAAA,mBAAmB,EAAE,KAAKlC,mBAT9B;AAUI,QAAA,WAAW,EAAE,KAAK3B,KAAL,CAAWiC,WAV5B;AAWI,QAAA,aAAa,EAAE,KAAK1B,KAAL,CAAWc,QAX9B;AAYI,QAAA,UAAU,EAAI,KAAKG,UAZvB;AAaI,QAAA,SAAS,EAAI,KAAKxB,KAAL,CAAWkC,SAb5B;AAcI,QAAA,iBAAiB,EAAE,KAAKlC,KAAL,CAAW8D,gBAdlC;AAeI,QAAA,cAAc,EAAE,KAAK9D,KAAL,CAAW+D,cAf/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARJ,CAJJ,EAiCI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,EAAE,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC,UAAhD;AACQ,QAAA,QAAQ,EAAE,KAAKtC,UAAL,EADlB;AACqC,QAAA,QAAQ,EAAE,KAAKtB,YADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKf,eAAe,CAAC,KAAKY,KAAL,CAAWgB,WAAZ,EAAwB,KAAKhB,KAAL,CAAWmB,SAAX,CAAqBC,SAA7C,CAHpB,CADJ,CAjCJ,EA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKwC,oBAAL,CAA0B,KAAKrD,KAAL,CAAWC,aAArC,EAAmD,KAAKD,KAAL,CAAWO,MAA9D,CADL,CA5CA,CAFJ,CAFA,CADC;AA0DR;;;;EA/QwB5B,S;;AAkR7B,eAAea,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport {FormatSwitch} from \"./FormatSwitcher\";\nimport \"../../css/MapBuilder.css\"\nimport {firstMapOptions} from \"../Helpers/renderSelectOptions\"\nimport {handleOptionSelect} from \"../Helpers/CallBacks\"\nimport AddFieldButton from \"./AddFieldButton\";\nimport Multi2One from \"../Multi2One\";\nimport {CM, FORMAT_121, FORMAT_CONV, FORMAT_DATE, FORMAT_M21, MM} from \"../Helpers/FileHelpers\";\nimport {isEmpty} from \"lodash\"\n\n\n\nclass XRenderFormats extends Component {\n\n    constructor(props) {\n\n        console.log(\"in render formats\")\n        super(props);\n        this.state = {format: null,\n            selectedField:null,\n            disabledSelf:false,\n            addField:0,\n\n        }\n\n    }\n\n\n\n    /* it handles default event action in this component for selecting initial sesar field\n    * Also from One2One component handles sets disabledSelf property when reassignment to multiple format through, same flow\n    * */\n\n    handleSelect=(event)=>{\n\n        let e = event;\n        let wasSelected = this.state.selectedField;\n        let isProperEvent = (e.target != null);\n        let val = (event.target != null)? event.target.value : event;\n        console.log(\"THIS IS VAL\",val)\n        let stateObj;\n\n        //handles submission of default  \"SELECT FIELD\" option\n        if(val === \"NULL\"){\n            stateObj = {format:null,  selectedField:null ,disabledSelf:(val!== \"NULL\")}\n        }\n\n        else {\n            stateObj = {format:this.props.sesarFields[val].format,  selectedField:val ,disabledSelf:(val!== \"NULL\")}\n        }\n\n        this.setState(stateObj,\n            () => {if(isProperEvent){\n                this.props.callBack(this.state,\n                    this.props.userField.fieldName,\n                    this.state.format,\n                    (val!==wasSelected)?wasSelected:null)\n            }\n        }\n        )\n    }\n\n\n\n   // handleFormatToMulti(e,sesarField){ this.props.handleFormatToMulti(e,sesarField)}\n\n\n    // renderMappingDisplay = (num) => {\n    //    if(this.state[\"showExample\"+num.toString()]){ return (\n    //         <div>\n    //             {num}\n    //         <h5 className=\"verify\">Mapping your field(s)</h5>\n    //\n    //     <h6 className=\"subText verify\">{(this.state.extraUserFields != null)?\n    //         this.props.userField.fieldName +\" + \"+JSON.stringify( this.state.extraUserFields):\n    //         this.props.userField.fieldName} </h6>\n    //\n    //\n    //\n    //     <h5 className={\"verify\"} >to SESAR field&nbsp;{this.state.selectedField}</h5>\n    //\n    //             <input type={\"radio\"} onClick={()=>this.setState({[\"showExample\"+num.toString()]: !this.state[\"showExample\"+num.toString()]})} />\n    //         </div>\n    //\n    // ) }\n    // else return <div><input type=\"radio\" onClick={()=>this.setState({[\"showExample\"+num.toString()]: !this.state[\"showExample\"+num.toString()]})} /></div>\n    // }\n\n\n    addField = (e) => {console.log(\"goin here\"); this.setState(preState => ({addField:preState.addField+1}),this.props.addExtraM21Field(this.state.selectedField))}\n\n    minusField = (format) => {console.log(\"minusField\"); if(format === FORMAT_M21) this.setState(preState => ({addField:preState.addField-1}))\n                            else { this.setState(preState => ({addField:0}))}}\n\n    //changeFormat= (e) =>{ this.props.changeFormat(e, this.props.sesarValues.sesarField) }\n\n    isDisabled = () =>{return (this.props.userField.disabled && !this.state.disabledSelf)?  true: false};\n\n    // collapseOnFinish = () => this.setState({collapse:true});\n    //\n    // expandOnEdit = () => this.setState({collapse:false})\n\n    registerExtraFields=(fields)=> this.setState({extraUserFields:fields})\n\n    conversionFormat = (field) => {\n        let {allUserFields, userField, defaultUnit, mapValues} = this.props;\n        let {selectedField} = this.state;\n\n        console.log(\"MAPVALFIELD\",mapValues[field],mapValues[field] === undefined)\n        if(mapValues[field] !== undefined){\n            console.log(\"allUserFields[mapValues[selectedField].userValues[0]]\",allUserFields[mapValues[selectedField].userValues[0]])\n            console.log(\"mapValues[selectedField]\",mapValues[selectedField])\n            let defaultVal = allUserFields[mapValues[selectedField].userValues[0]].exampleValue;\n            let extraVal = \"\";\n            if(mapValues[selectedField].userValues[1] !== undefined &&\n                    mapValues[selectedField].userValues[1] !== \"NULL\") {\n                extraVal = allUserFields[mapValues[selectedField].userValues[1]].exampleValue\n            } else {\n                extraVal = \"\" } ;\n            extraVal = (extraVal === \"\") ? 0 : extraVal;\n            // let defaultUnit = defaultUnit;\n            let scalar = 0;\n\n            let extraUnit = (mapValues[selectedField].extra !== undefined ? \n                            mapValues[selectedField].extra.unit : \"NULL\")\n            if (defaultUnit === CM) {\n                if (extraUnit === MM) {\n                    scalar = 1 / 10;\n                }\n                else scalar=1\n            }\n            if (defaultUnit === MM) {\n                if (extraUnit === CM) {\n                    scalar = 10;\n                }\n                else scalar=1\n\n            }\n\n\n                return (\n                    <div className=\"inline verify\">\n                        <a>\n                            {selectedField}:{ Number(defaultVal) + Number(extraVal * scalar)}</a>\n                    </div>\n                )\n\n        }\n    }\n\n    dateFormat = (field,format) =>{\n        let {allUserFields, userField, defaultUnit, mapValues} = this.props;\n\n        let {selectedField} = this.state;\n        let dateInput;\n\n        if( mapValues.userDateFormat=== undefined) return <a>SET DATE FORMATTING AT TOP OF PAGE</a>\n            else dateInput = mapValues.userDateFormat\n        if(mapValues.selectedField === undefined) return <a>NO MAP VALS</a>\n\n        if(allUserFields[selectedField].exampleValue !== undefined){\n            let exampleValue = allUserFields[selectedField].exampleValue;\n\n            let returnValue = exampleValue.substring(dateInput.indexOf(\"Y\"),dateInput.lastIndexOf(\"Y\")+1)+\"-\"+\n                exampleValue.substring(dateInput.indexOf(\"M\"),dateInput.lastIndexOf(\"M\")+1)+\"-\"+\n                exampleValue.substring(dateInput.indexOf(\"D\"),dateInput.lastIndexOf(\"D\")+1)\n\n            return <a>{selectedField}:{returnValue}</a>\n        }\n        return \"SORRY\"\n    }\n\n    m21Format = (field, format) =>{\n        let {allUserFields, userField, defaultUnit, mapValues} = this.props;\n\n        let {selectedField} = this.state;\n\n        let theseFields = mapValues[selectedField] !== undefined ? mapValues[selectedField].userValues : \" \"\n        console.log(\"M21 BBY\",theseFields, format)\n\n        let values =  Object.entries(theseFields).map(\n            ([each, value]) =>{\n                console.log(\"wat each\",each,value, format);\n                if(allUserFields[value] !== undefined) {\n                    if (format === FORMAT_M21)\n                        return <a>{value}:{allUserFields[value].exampleValue},</a>\n                    else\n                        return <a>{allUserFields[value].exampleValue}</a>\n                }\n            });\n        let example =( (format === FORMAT_M21 ? <a>{selectedField}: [{values}]</a> : <a>{selectedField}: {values}</a>))\n        console.log(\"EX>\",example)\n        return  <div className=\"inline verify\">{example}</div>\n    }\n\n    returnFieldMapValues=(field,format)=>{\n        console.log(\"returnfieldmapvals\",field, format)\n        format = this.state.selectedField === \"sample_comment\" ? FORMAT_M21 : format\n        console.log(\"returnfieldmapvals\",field, format)\n\n        if (format === null) return \"\"\n\n        if(format === FORMAT_CONV){\n            console.log(\"in format conv\")\n            return( <div>{this.conversionFormat(field)}</div>)\n        }\n        if(format === FORMAT_DATE){\n            console.log(\"in format DATE\")\n            return( <div>{this.dateFormat(field)}</div>)\n        }\n        else\n        {\n            console.log(\"not format conv\")\n\n            return <div >{this.m21Format(field,format)}</div>\n        }\n\n\n    }\n\n    render() {\n        if(this.isDisabled()) {\n            return null\n        }\n\n        else return(\n            <div className=\"row\">\n                <div className=\"col-lg-1\"/>\n            <div className=\"card col-lg-10 \" >\n\n                <div className=\"card-header\" >\n\n\n\n                    <div className=\"col-lg-5\">\n                        <div className=\"inline col-lg-1\">\n                            <AddFieldButton allUserFields={this.props.sesarFields}\n                                            addFieldOnClick={(e)=>this.addField(e)}\n                                            format={this.state.format}\n                                            selectedField={this.state.selectedField}\n                                            addExtraM21Field = {this.props.addExtraM21Field}/>\n                        </div>\n                        <FormatSwitch\n                            {...this.props}\n                           // collapseOnFinish = {this.collapseOnFinish}\n                            format={this.state.format}\n                            //handleSelect={this.handleSelect}\n                            originField={this.props.userField.fieldName}\n                            exampleValue={this.props.userField.exampleValue}\n                            selectedField={this.state.selectedField}\n                            addConversionValue={this.props.addConversionValue}\n                            registerExtraFields={this.registerExtraFields}\n                            defaultUnit={this.props.defaultUnit}\n                            addFieldCount={this.state.addField}\n                            minusField = {this.minusField}\n                            mapValues = {this.props.mapValues}\n                            setExtraM21Fields={this.props.setExtraM21Field}\n                            removeM21Field={this.props.removeM21Field}\n                            />\n                    </div>\n\n\n\n                    <div className=\"col-lg-3\">\n                        <select className=\"form-control\" id=\"sel2\" name=\"sellist2\"\n                                disabled={this.isDisabled()} onChange={this.handleSelect} >\n\n                            {firstMapOptions(this.props.sesarFields,this.props.userField.fieldName)}\n\n                        </select>\n\n                    </div>\n\n\n                <div>\n                    {this.returnFieldMapValues(this.state.selectedField,this.state.format)}\n                </div>\n\n\n            </div>\n\n            </div>\n            </div>)\n    }\n}\n\nexport default XRenderFormats;"]},"metadata":{},"sourceType":"module"}