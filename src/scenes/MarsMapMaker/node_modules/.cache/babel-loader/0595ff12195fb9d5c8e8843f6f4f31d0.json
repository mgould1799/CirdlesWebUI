{"ast":null,"code":"import _slicedToArray from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/meagangould/Desktop/MarsMapMaker/src/components/XMapBuilder.js\";\nimport React, { Component } from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport { FORMAT_M21, readToText } from \"./BuilderComponents/Helpers/FileHelpers\";\nimport { fileTextToState } from \"./BuilderComponents/Helpers/FileHelpers\";\nimport './css/MapBuilder.css';\nimport { fieldsDict } from \"./BuilderComponents/Helpers/fieldsDict.jsx\";\nimport saveAs from 'file-saver';\nimport mapPrinter from \"./BuilderComponents/Main/mapPrinter\";\nimport XRenderFormats from \"./BuilderComponents/Main/XRenderFormats\";\nimport DefaultInfo from \"./BuilderComponents/Main/DefaultInfo\";\nimport legend from \"../M3Legend.jpg\";\nimport { removeMapValue, setUserField, addToBeMapped, enableSesarField, disableSesarField, enableUserField, decoupleOldUserFieldsMapValues, replaceM21Null, removeExtraM21Field } from \"./BuilderComponents/Helpers/CallBacks\";\nimport { LegendPopup } from \"./LegendPopup\";\n\nvar XMapBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(XMapBuilder, _Component);\n\n  function XMapBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, XMapBuilder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(XMapBuilder).call(this, props));\n\n    _this.handleFileUpload =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var fileContents;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.setState({\n                  file: e[0]\n                });\n\n              case 2:\n                _context.next = 4;\n                return readToText(_this.state.file);\n\n              case 4:\n                fileContents = _context.sent;\n                _context.t0 = _this;\n                _context.next = 8;\n                return fileTextToState(fileContents);\n\n              case 8:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  fields: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.currentMapValueFields = function (oldVal) {\n      if (oldVal === \"size\") return \"NULL\";\n      return _this.state.mapValues[oldVal].userValues;\n    };\n\n    _this.removeFieldCallBack = function (oldField, originField) {\n      var newFields = enableUserField(oldField, _this.state.fields);\n\n      var newMapValues = _objectSpread({}, _this.state.mapValues);\n\n      delete newMapValues[originField].extra;\n      newMapValues[originField].userValues = newMapValues[originField].userValues.splice(0, 1);\n      console.log(newMapValues);\n\n      _this.setState(function (preState) {\n        return {\n          fields: newFields,\n          mapValues: newMapValues //{...preState.mapValues, [sesarValues.selectedField]: newMapValue}\n\n        };\n      });\n    };\n\n    _this.callBack = function (sesarValues, userField, format, oldField) {\n      //on button click toggles disable for option and sets mapping variable\n      console.log(\"kallbacking\", sesarValues, \"uf\", userField, \"form\", format, \"oldfield\", oldField);\n      var newSesarFields = disableSesarField(_this.state.sesarFields, sesarValues); //returns state.sesarFields\n\n      var newMapValues = addToBeMapped(_this.state.mapValues, userField, sesarValues, format); //returns state.mapValues\n\n      console.log(\"new map values\", newMapValues);\n      var newFields = setUserField(_this.state.fields, userField, sesarValues); //returns state.fields\n\n      console.log(newFields[\"FACILITY_CODE\"], \"\\n\", newFields);\n\n      if (oldField !== null) {\n        console.log(\"made it!\", oldField);\n\n        var userFieldsToEnable = _this.currentMapValueFields(oldField);\n\n        newFields = enableUserField(userFieldsToEnable, newFields);\n        newSesarFields = enableSesarField(oldField, newSesarFields);\n        newMapValues = removeMapValue(oldField, newMapValues);\n      }\n\n      _this.setState(function (preState) {\n        return {\n          fields: newFields,\n          sesarFields: newSesarFields,\n          mapValues: newMapValues\n        };\n      });\n    };\n\n    _this.removeM21Field = function (sesarField, selectedValue, index) {\n      var newMapValues = removeExtraM21Field(_this.state.mapValues, sesarField, selectedValue, index);\n\n      if (selectedValue !== \"NULL\") {\n        var newFields = enableUserField(selectedValue, _this.state.fields);\n      } else newFields = _this.state.fields;\n\n      _this.setState(function (preState) {\n        return {\n          fields: newFields,\n          mapValues: newMapValues\n        };\n      });\n    };\n\n    _this.multiCallBack = function (sesarValues, userField, format, oldValues) {\n      //on button click toggles disable for option and sets mapping variable\n      console.log(\"MCB\", sesarValues, \"uf\", userField, format, oldValues); //sets mappedTo in new fields\n\n      var newFields = setUserField(_this.state.fields, userField, sesarValues); //returns state.fields\n      // adds new MapValues\n      // let newMapValues = addToBeMapped(this.state.mapValues,userField, sesarValues, format); //returns state.mapValues\n\n      var mapValues = _this.state.mapValues;\n      var nullIndex = mapValues[sesarValues.selectedField].userValues.indexOf(\"NULL\");\n\n      if (nullIndex !== -1) {\n        mapValues = replaceM21Null(mapValues, sesarValues, userField, nullIndex);\n      } else if (userField[0] !== \"NULL\") {\n        mapValues = addToBeMapped(mapValues, userField, sesarValues, format);\n      } //sets values no longer selected to not disabled and no mapped to\n\n\n      newFields = enableUserField(oldValues, newFields); // removes oldvalues from MappingValues\n\n      mapValues = decoupleOldUserFieldsMapValues(oldValues, mapValues[sesarValues.selectedField]);\n\n      _this.setState(function (preState) {\n        return {\n          fields: newFields,\n          mapValues: _objectSpread({}, preState.mapValues, _defineProperty({}, sesarValues.selectedField, mapValues))\n        };\n      });\n    };\n\n    _this.setExtraM21Field = function (sesarField, selectedValue, index) {\n      console.log(\"SetM21 \\n sesarField:\", sesarField, \"SelectedValues:\", selectedValue);\n      var newFields = setUserField(_this.state.fields, selectedValue, {\n        selectedField: sesarField\n      }); //returns state.fields\n\n      var newMapValues = replaceM21Null(_this.state.mapValues, {\n        selectedField: sesarField\n      }, selectedValue, index);\n\n      _this.setState(function (preState) {\n        return {\n          fields: _objectSpread({}, newFields),\n          mapValues: _objectSpread({}, newMapValues)\n        };\n      });\n    };\n\n    _this.renderfields = function () {\n      var userFields = Object.keys(_this.state.fields);\n\n      if (userFields.length > 0) {\n        return Object.entries(_this.state.fields).map(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n              each = _ref3[0],\n              value = _ref3[1];\n\n          //each is the sesar field object\n          // console.log(\"renderformats\",value)\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, \" \", React.createElement(XRenderFormats, {\n            key: \"RF-\" + each,\n            userField: _objectSpread({\n              fieldName: each\n            }, value),\n            sesarFields: _this.state.sesarFields,\n            allUserFields: _this.state.fields,\n            decouple: _this.decoupleOldUserFieldsMapValues,\n            callBack: _this.callBack,\n            multiCallBack: _this.multiCallBack,\n            changeFormat: _this.changeFormat,\n            addConversionValue: _this.addConversionValue,\n            defaultUnit: _this.state.mapValues.defaultUnit //removeFieldCallBack={this.removeFieldCallBack}\n            ,\n            mapValues: _this.state.mapValues,\n            addExtraM21Field: _this.addExtraM21Field,\n            setExtraM21Field: _this.setExtraM21Field,\n            removeM21Field: _this.removeM21Field,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \" >:)\");\n    };\n\n    _this.setUnit = function (e) {\n      var unit = e.target.value;\n      var newSesarFields = disableSesarField(_this.state.sesarFields, {\n        selectedField: \"size_unit CM IS COMMON\"\n      });\n\n      _this.setState(function (preState) {\n        return {\n          mapValues: _objectSpread({}, preState.mapValues, {\n            defaultUnit: unit\n          }),\n          sesarFields: _objectSpread({}, newSesarFields)\n        };\n      });\n    };\n\n    _this.addConversionValue = function (targetValue, extra) {\n      var temp = _this.state.mapValues[targetValue];\n\n      if (extra) {\n        temp.extra = {\n          field: extra.field,\n          unit: extra.unit\n        };\n      }\n\n      _this.setState(function (preState) {\n        return {\n          mapValues: _objectSpread({}, preState.mapValues, _defineProperty({}, targetValue, temp))\n        };\n      });\n    };\n\n    _this.addExtraM21Field = function (target) {\n      var temp = addToBeMapped(_this.state.mapValues, [\"NULL\"], {\n        selectedField: target\n      }, FORMAT_M21);\n\n      _this.setState(function (preState) {\n        return {\n          mapValues: _objectSpread({}, temp)\n        };\n      });\n    };\n\n    _this.makeMapFile = function () {\n      var blob = new Blob([mapPrinter(_this.state.mapValues)], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"testfile1.txt\");\n      ;\n    };\n\n    _this.setDateFormatting = function (dateFormat) {\n      _this.setState(function (prevState) {\n        return {\n          mapValues: _objectSpread({}, _this.state.mapValues, {\n            userDateFormat: dateFormat\n          })\n        };\n      });\n    };\n\n    _this.state = {\n      file: [],\n      fields: {},\n      mapValues: {},\n      sesarFields: fieldsDict\n    };\n    return _this;\n  }\n\n  _createClass(XMapBuilder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"STATE\", this.state.sesarFields);\n      return React.createElement(\"div\", {\n        style: {\n          margin: \"20px\",\n          \"margin-top\": \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \" row \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), \"File Input\", React.createElement(\"div\", {\n        className: \"col-lg-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.handleFileUpload(event.target.files);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#myModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Help\"), React.createElement(LegendPopup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-lg-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(DefaultInfo, {\n        setDateFormatting: this.setDateFormatting,\n        userFields: this.state.fields,\n        setUnit: this.setUnit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))), this.renderfields(), React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.makeMapFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \" Create Map File\")));\n    }\n  }]);\n\n  return XMapBuilder;\n}(Component);\n\nexport default XMapBuilder;","map":{"version":3,"sources":["/home/meagangould/Desktop/MarsMapMaker/src/components/XMapBuilder.js"],"names":["React","Component","connect","FORMAT_M21","readToText","fileTextToState","fieldsDict","saveAs","mapPrinter","XRenderFormats","DefaultInfo","legend","removeMapValue","setUserField","addToBeMapped","enableSesarField","disableSesarField","enableUserField","decoupleOldUserFieldsMapValues","replaceM21Null","removeExtraM21Field","LegendPopup","XMapBuilder","props","handleFileUpload","e","setState","file","state","fileContents","fields","currentMapValueFields","oldVal","mapValues","userValues","removeFieldCallBack","oldField","originField","newFields","newMapValues","extra","splice","console","log","preState","callBack","sesarValues","userField","format","newSesarFields","sesarFields","userFieldsToEnable","removeM21Field","sesarField","selectedValue","index","multiCallBack","oldValues","nullIndex","selectedField","indexOf","setExtraM21Field","renderfields","userFields","Object","keys","length","entries","map","each","value","fieldName","changeFormat","addConversionValue","defaultUnit","addExtraM21Field","setUnit","unit","target","targetValue","temp","field","makeMapFile","blob","Blob","type","setDateFormatting","dateFormat","prevState","userDateFormat","margin","event","files"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {FORMAT_M21, readToText} from \"./BuilderComponents/Helpers/FileHelpers\"\nimport {fileTextToState} from \"./BuilderComponents/Helpers/FileHelpers\"\nimport './css/MapBuilder.css'\nimport  {fieldsDict}  from \"./BuilderComponents/Helpers/fieldsDict.jsx\"\nimport saveAs from 'file-saver';\nimport mapPrinter from \"./BuilderComponents/Main/mapPrinter\"\nimport XRenderFormats from \"./BuilderComponents/Main/XRenderFormats\"\nimport DefaultInfo from \"./BuilderComponents/Main/DefaultInfo\";\nimport legend from \"../M3Legend.jpg\"\n\nimport {\n    removeMapValue,\n    setUserField,\n    addToBeMapped,\n    enableSesarField,\n    disableSesarField,\n    enableUserField,\n    decoupleOldUserFieldsMapValues,\n    replaceM21Null, removeExtraM21Field\n} from \"./BuilderComponents/Helpers/CallBacks\"\nimport {LegendPopup} from \"./LegendPopup\";\n\n\n\n\nclass XMapBuilder extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: [], fields: {}, mapValues: {}, sesarFields:fieldsDict,\n        }\n\n    }\n\n\n        handleFileUpload= async (e) =>{\n        //console.log(\"e\", e)\n        await this.setState({file: e[0]})\n        //console.log(\"state: \", this.state.file)\n\n        const fileContents = await readToText(this.state.file)\n        // console.log(\"fc:\", fileContents);\n\n\n        this.setState({fields:await fileTextToState(fileContents)})\n\n    }\n\n\n\n    // changeFormat=(e,sesarField)=>{\n    //     var sesarFields = this.state.sesarFields;\n    //     var newFormat = e.target.value;\n    //\n    //     if (newFormat !== sesarFields[sesarField].format) {\n    //         var stateObject = sesarFields[sesarField];\n    //         stateObject.format = newFormat;\n    //         this.setState(preState => ({\n    //             sesarFields: {...sesarFields,\n    //                 [sesarField]: stateObject }\n    //\n    //         } ) )\n    //     }\n    // }\n\n    currentMapValueFields=(oldVal)=>{\n        if(oldVal===\"size\") return \"NULL\"\n        return (this.state.mapValues[oldVal].userValues)};\n\n    removeFieldCallBack = (oldField,originField) =>{\n\n        let newFields = enableUserField(oldField,this.state.fields);\n        let  newMapValues = {...this.state.mapValues};\n        delete newMapValues[originField].extra ;\n        newMapValues[originField].userValues = newMapValues[originField].userValues.splice(0,1)\n        console.log(newMapValues);\n        this.setState(preState => ({\n            fields: newFields,\n\n            mapValues : newMapValues //{...preState.mapValues, [sesarValues.selectedField]: newMapValue}\n        }))\n    }\n\n    callBack =(sesarValues,userField,format,oldField)=> { //on button click toggles disable for option and sets mapping variable\n        console.log(\"kallbacking\", sesarValues, \"uf\", userField, \"form\", format , \"oldfield\",oldField)\n        let newSesarFields = disableSesarField(this.state.sesarFields,sesarValues); //returns state.sesarFields\n        let newMapValues = addToBeMapped(this.state.mapValues,userField, sesarValues, format); //returns state.mapValues\n        console.log(\"new map values\",newMapValues)\n        let newFields = setUserField(this.state.fields,userField, sesarValues); //returns state.fields\n        console.log(newFields[\"FACILITY_CODE\"], \"\\n\",newFields);\n\n        if(oldField !== null ) {\n            console.log(\"made it!\",oldField)\n            let userFieldsToEnable = this.currentMapValueFields(oldField);\n            newFields = enableUserField(userFieldsToEnable,newFields);\n            newSesarFields = enableSesarField(oldField,newSesarFields);\n            newMapValues = removeMapValue(oldField,newMapValues);\n        }\n\n        this.setState(preState => ({\n            fields: newFields,\n            sesarFields:  newSesarFields,\n            mapValues : newMapValues\n        }))\n    };\n    removeM21Field =(sesarField,selectedValue,index)=>{\n        var newMapValues = removeExtraM21Field(this.state.mapValues,sesarField,selectedValue,index)\n        if(selectedValue !== \"NULL\") {\n            var newFields = enableUserField(selectedValue, this.state.fields);\n        }else newFields = this.state.fields;\n        this.setState(preState => ({\n            fields: newFields,\n            mapValues : newMapValues\n        }))\n    }\n\n    multiCallBack=(sesarValues,userField,format,oldValues)=> { //on button click toggles disable for option and sets mapping variable\n        console.log(\"MCB\",sesarValues,\"uf\",userField,format,oldValues)\n        //sets mappedTo in new fields\n        let newFields = setUserField(this.state.fields,userField, sesarValues); //returns state.fields\n        // adds new MapValues\n        // let newMapValues = addToBeMapped(this.state.mapValues,userField, sesarValues, format); //returns state.mapValues\n        let mapValues = this.state.mapValues;\n        let nullIndex = mapValues[sesarValues.selectedField].userValues.indexOf(\"NULL\");\n\n        if(nullIndex !== -1) {\n            mapValues = replaceM21Null(mapValues, sesarValues, userField, nullIndex)\n        } else if(userField[0] !== \"NULL\"){\n            mapValues = addToBeMapped(mapValues,userField,sesarValues,format)\n        }\n        //sets values no longer selected to not disabled and no mapped to\n        newFields = enableUserField(oldValues,newFields)\n        // removes oldvalues from MappingValues\n        mapValues = decoupleOldUserFieldsMapValues(oldValues,mapValues[sesarValues.selectedField])\n\n\n\n        this.setState(preState => ({\n            fields: newFields,\n            mapValues : {...preState.mapValues, [sesarValues.selectedField]: mapValues}\n        }))\n    };\n\n    setExtraM21Field = (sesarField,selectedValue,index)=>{\n        console.log(\"SetM21 \\n sesarField:\",sesarField,\"SelectedValues:\",selectedValue)\n        let newFields = setUserField(this.state.fields,selectedValue, {selectedField:sesarField}); //returns state.fields\n\n        var newMapValues = replaceM21Null(this.state.mapValues,{selectedField:sesarField},selectedValue,index)\n\n        this.setState(preState => ({\n            fields: {...newFields},\n            mapValues : {...newMapValues}\n        }))\n    }\n\n\n\n    renderfields=()=> {\n\n        let userFields = Object.keys(this.state.fields);\n\n        if (userFields.length > 0) {\n            return Object.entries(this.state.fields).map(([each, value]) => { //each is the sesar field object\n                   // console.log(\"renderformats\",value)\n                    return <div> <XRenderFormats\n                                    key={\"RF-\"+each}\n                                    userField={{fieldName:each,...value}}\n                                    sesarFields={this.state.sesarFields}\n                                    allUserFields={this.state.fields}\n                                    decouple={this.decoupleOldUserFieldsMapValues}\n                                    callBack={this.callBack}\n                                    multiCallBack={this.multiCallBack}\n                                    changeFormat={this.changeFormat}\n                                    addConversionValue={this.addConversionValue}\n                                    defaultUnit={this.state.mapValues.defaultUnit}\n                                    //removeFieldCallBack={this.removeFieldCallBack}\n                                    mapValues ={this.state.mapValues}\n                                    addExtraM21Field={this.addExtraM21Field}\n                                    setExtraM21Field ={this.setExtraM21Field}\n                                    removeM21Field={this.removeM21Field}\n                    />\n                    </div>\n\n            } )\n        }\n        return <div> >:)</div>\n    }\n\n    setUnit=(e)=>{\n        let unit = e.target.value;\n        let newSesarFields = disableSesarField(this.state.sesarFields,{selectedField:\"size_unit CM IS COMMON\"})\n        this.setState(preState => ({mapValues : {...preState.mapValues, defaultUnit : unit },sesarFields:{...newSesarFields} }) )};\n\n    addConversionValue = (targetValue,extra ) => {\n        let temp = this.state.mapValues[targetValue]\n\n        if(extra){temp.extra = {field: extra.field , unit : extra.unit}}\n\n        this.setState(preState =>({mapValues : { ...preState.mapValues , [targetValue]: temp  } }))\n    }\n\n    addExtraM21Field = (target)=>{\n        var temp = addToBeMapped(this.state.mapValues,[\"NULL\"],{selectedField:target},FORMAT_M21);\n        this.setState(preState => ({\n\n            mapValues : {...temp}\n        }))\n    }\n\n\n\n/*############ Takes in state of generated mapValues and produces  .js map file*/\n makeMapFile=()=>{\n     var blob = new Blob([ mapPrinter(this.state.mapValues)], {type: \"text/plain;charset=utf-8\"});\n     saveAs(blob, \"testfile1.txt\");\n    ;\n }\n\n setDateFormatting=(dateFormat)=>{this.setState(prevState =>({ mapValues : {...this.state.mapValues, userDateFormat:dateFormat}}))}\n\n    render() {\n\n\n        console.log(\"STATE\",this.state.sesarFields)\n        return (\n\n            <div style={{margin:\"20px\",\"margin-top\":\"50px\"}}>\n\n                <div className=\" row \">\n\n                            <div className={\"col-lg-4\"} />\n\n                    File Input\n                    <div className={\"col-lg-3\"} >\n                        <input  type=\"file\" onChange={event => this.handleFileUpload(event.target.files)}/>\n                    </div>\n\n                    <div className={\"col-lg-1\"}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#myModal\">\n                            Help\n                        </button>\n                        <LegendPopup/>\n                    </div>\n\n                </div>\n\n                <div className={\"row\"}>\n                    <div className={\"col-lg-3\"} />\n                    <div className={\"col-lg-9\"}>\n                    <DefaultInfo setDateFormatting={this.setDateFormatting}\n                                 userFields={this.state.fields}\n                                    setUnit={this.setUnit}/>\n                    </div>\n                </div>\n\n\n\n\n\n\n\n\n                {this.renderfields()}\n                <div className=\"\">\n                <button onClick={this.makeMapFile} > Create Map File</button>\n                </div>\n                </div>\n        )\n    }\n}\n\n\n\nexport default (XMapBuilder);\n"]},"metadata":{},"sourceType":"module"}