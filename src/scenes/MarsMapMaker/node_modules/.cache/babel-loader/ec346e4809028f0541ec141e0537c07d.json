{"ast":null,"code":"import _slicedToArray from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/meagangould/Desktop/MarsMapMaker/src/components/MapBuilder.js\";\nimport React, { Component } from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport { readToText } from \"./BuilderComponents/Helpers/FileHelpers\";\nimport { fileTextToState } from \"./BuilderComponents/Helpers/FileHelpers\";\nimport './css/MapBuilder.css';\nimport { fieldsDict } from \"./BuilderComponents/Helpers/fieldsDict.jsx\";\nimport saveAs from 'file-saver';\nimport mapPrinter from \"./BuilderComponents/Main/mapPrinter\";\nimport XRenderFormats from \"./BuilderComponents/Main/XRenderFormats\";\nimport { kallBack, FORMAT_M21, FORMAT_121 } from \"./BuilderComponents/Helpers/FileHelpers\";\nimport DefaultInfo from \"./BuilderComponents/Main/DefaultInfo\";\nvar text = \"original_archive,current archive,platform_name,cruise_field_prgrm,name,collection_method,collection_start_date,collection_end_date,latitude,latitude_end,longitude,longitude_end,elevation,elevation_end,size,size_unit CM IS COMMON,,collector,primary_location_type,igsn,,sample_comment,,field_name KEYED LIST,sample description,geological_age,age (min)MA,age (max)MA,sample_comment,classification,sample description,sample_type\";\nvar newtext = text.split(\",\");\n\nvar MapBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapBuilder, _Component);\n\n  function MapBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, MapBuilder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapBuilder).call(this, props));\n\n    _this.handleFileUpload =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var fileContents;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.setState({\n                  file: e[0]\n                });\n\n              case 2:\n                _context.next = 4;\n                return readToText(_this.state.file);\n\n              case 4:\n                fileContents = _context.sent;\n                _context.t0 = _this;\n                _context.next = 8;\n                return fileTextToState(fileContents);\n\n              case 8:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  fields: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.decoupleOldUserFieldsMapValues = function (oldUserFields, currentMapping) {\n      var editedCurrentMapping = currentMapping;\n      var temp = []; //console.log(\"uf\",oldUserFields)\n      //console.log(\"curr\",currentMapping)\n\n      if (typeof editedCurrentMapping.userValues != \"string\") {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = editedCurrentMapping.userValues[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var each = _step.value;\n            if (oldUserFields.indexOf(each) < 0) temp.push(each);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        if (oldUserFields.indexOf(currentMapping.userValues) < 0) temp.push(currentMapping.userValues);\n      } //console.log(\"decoupled\",oldUserFields,\"now \",temp)\n\n\n      return _objectSpread({}, editedCurrentMapping, {\n        userValues: temp\n      });\n    };\n\n    _this.enableUserField = function (oldUserField, newFields) {\n      console.log(\"enable field\", oldUserField);\n      var temp = newFields;\n\n      if (typeof oldUserField === \"string\") {\n        temp[oldUserField].disabled = false;\n        delete temp[oldUserField].mappedTo;\n      } else {\n        console.log(\"ensuser ruhroh\");\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = oldUserField[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var each = _step2.value;\n            temp[each].disabled = false;\n            delete temp[each].mappedTo;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        ;\n      }\n\n      return temp;\n    };\n\n    _this.disableSesarField = function (e) {\n      console.log(\"TD:\", e);\n\n      var temp = _objectSpread({}, _this.state.sesarFields);\n\n      if (e.selectedField) {\n        temp[e.selectedField].disabled = true;\n      }\n\n      return temp;\n    };\n\n    _this.enableSesarField = function (oldField, sesarFields) {\n      var temp = sesarFields;\n      temp[oldField].disabled = false;\n\n      if (temp[oldField].format === FORMAT_M21) {\n        temp[oldField].format = FORMAT_121;\n      }\n\n      temp[oldField].disabled = false;\n      return temp;\n    };\n\n    _this.addToBeMapped = function (userField, sesarValues, format) {\n      if (sesarValues.selectedField !== null) {\n        var temp = {};\n        console.log(\"mapdebug\", _this.state.mapValues[sesarValues.selectedField]);\n\n        if (!_this.state.mapValues[sesarValues.selectedField]) {\n          temp.userValues = [userField];\n          temp.sesarField = sesarValues.selectedField;\n          temp.format = format;\n        } // console.log(\"the set StatePiece\",this.state)\n        else {\n            temp = _this.state.mapValues[sesarValues.selectedField];\n            console.log(\"dastemp\", temp);\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = userField[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var each = _step3.value;\n                if (temp.userValues.indexOf(each) < 0) temp.userValues = temp.userValues.concat(each);\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            temp.sesarField = sesarValues.selectedField;\n            temp.format = format;\n          }\n\n        console.log(\"returning state\", _objectSpread({}, _this.state.mapValues), \"temp:\", temp);\n        return _objectSpread({}, _this.state.mapValues, _defineProperty({}, sesarValues.selectedField, temp));\n      } else return _objectSpread({}, _this.state.mapValues);\n    };\n\n    _this.setUserField = function (userField, sesarValues) {\n      console.log(\"set user field\", userField, \"set mappval\", sesarValues);\n\n      var temp = _objectSpread({}, _this.state.fields); //(this.state.fields[each].mappedTo != null) ? (this.state.fields[userField].mappedTo) : [];\n\n\n      if (typeof userField != \"string\") {\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = userField[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var each = _step4.value;\n\n            if (sesarValues) {\n              temp[each].mappedTo = sesarValues.selectedField;\n              temp[each].disabled = true;\n            } else {\n              temp[each].disabled = !temp[each].disabled;\n              delete temp[each].mappedTo;\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      } else {\n        //is string\n        if (sesarValues) {\n          temp[userField].mappedTo = sesarValues.selectedField;\n          temp[userField].disabled = true;\n        } else {\n          temp[userField].disabled = !temp[userField].disabled;\n          delete temp[userField].mappedTo;\n        }\n      }\n\n      return temp;\n    };\n\n    _this.changeFormat = function (e, sesarField) {\n      var sesarFields = _this.state.sesarFields;\n      var newFormat = e.target.value;\n\n      if (newFormat !== sesarFields[sesarField].format) {\n        var stateObject = sesarFields[sesarField];\n        stateObject.format = newFormat;\n\n        _this.setState(function (preState) {\n          return {\n            sesarFields: _objectSpread({}, sesarFields, _defineProperty({}, sesarField, stateObject))\n          };\n        });\n      }\n    };\n\n    _this.currentMapValueFields = function (oldVal) {\n      return _this.state.mapValues[oldVal].userValues;\n    };\n\n    _this.removeMapValue = function (oldVal, newMapValues) {\n      var temp = newMapValues;\n      delete temp[oldVal];\n      console.log(\"TEMP DELETE\", temp);\n      return temp;\n    };\n\n    _this.renderfields = function () {\n      var userFields = Object.keys(_this.state.fields); // var testFields = {name: {sesarName: \"name\", fieldFormat: \"one2one\", userValues: null},\n      //     collection_start_date: {sesarName: \"collection_start_date\", fieldFormat: \"dateFormat\", userValues: null},\n      //     size: {sesarName: \"size\", fieldFormat: \"conversion\", userValues: null},\n      //     sample_description: {sesarName: \"sample_description\", fieldFormat: \"multi2one\", userValues: null}}\n\n      var callBack = function callBack(sesarValues, userField, format, oldField) {\n        //on button click toggles disable for option and sets mapping variable\n        console.log(\"kallbacking\", sesarValues, \"uf\", userField, \"form\", format);\n\n        var newSesarFields = _this.disableSesarField(sesarValues); //returns state.sesarFields\n\n\n        var newMapValues = _this.addToBeMapped(userField, sesarValues, format); //returns state.mapValues\n\n\n        console.log(\"new map values\", newMapValues);\n\n        var newFields = _this.setUserField(userField, sesarValues); //returns state.fields\n\n\n        if (oldField !== null) {\n          console.log(\"made it!\");\n\n          var userFieldsToEnable = _this.currentMapValueFields(oldField);\n\n          newFields = _this.enableUserField(userFieldsToEnable, newFields);\n          newSesarFields = _this.enableSesarField(oldField, newSesarFields);\n          newMapValues = _this.removeMapValue(oldField, newMapValues);\n        }\n\n        _this.setState(function (preState) {\n          return {\n            fields: newFields,\n            sesarFields: newSesarFields,\n            mapValues: newMapValues //{...preState.mapValues, [sesarValues.selectedField]: newMapValue}\n\n          };\n        });\n      };\n\n      var multiCallBack = function multiCallBack(sesarValues, userField, format, oldValues) {\n        //on button click toggles disable for option and sets mapping variable\n        console.log(\"kallbacking\", sesarValues, \"uf\", userField, \"form\", format); //sets mappedTo in new fields\n\n        var newFields = _this.setUserField(userField, sesarValues); //returns state.fields\n        // adds new MapValues\n\n\n        var newMapValues = _this.addToBeMapped(userField, sesarValues, format); //returns state.mapValues\n        //sets values no longer selected to not disabled and no mapped to\n\n\n        newFields = _this.enableUserField(oldValues, newFields); // removes oldvalues from MappingValues\n\n        newMapValues = _this.decoupleOldUserFieldsMapValues(oldValues, newMapValues[sesarValues.selectedField]);\n\n        _this.setState(function (preState) {\n          return {\n            fields: newFields,\n            mapValues: _objectSpread({}, preState.mapValues, _defineProperty({}, sesarValues.selectedField, newMapValues))\n          };\n        });\n      };\n\n      if (userFields.length > 0) {\n        return Object.entries(_this.state.fields).map(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n              each = _ref3[0],\n              value = _ref3[1];\n\n          //each is the sesar field object\n          // console.log(\"renderformats\",value)\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301\n            },\n            __self: this\n          }, \" \", React.createElement(XRenderFormats, {\n            key: \"RF-\" + each,\n            userField: _objectSpread({\n              fieldName: each\n            }, value),\n            sesarFields: _this.state.sesarFields,\n            allUserFields: _this.state.fields,\n            decouple: _this.decoupleOldUserFieldsMapValues,\n            callBack: callBack,\n            multiCallBack: multiCallBack,\n            changeFormat: _this.changeFormat,\n            addConversionValue: _this.addConversionValue,\n            defaultUnit: _this.state.mapValues.defaultUnit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301\n            },\n            __self: this\n          }), \" \");\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \" >:)\");\n    };\n\n    _this.setUnit = function (e) {\n      var unit = e.target.value;\n\n      _this.setState(function (preState) {\n        return {\n          mapValues: _objectSpread({}, preState.mapValues, {\n            defaultUnit: unit\n          })\n        };\n      });\n    };\n\n    _this.addConversionValue = function (targetValue, extra) {\n      var temp = _this.state.mapValues[targetValue];\n\n      if (extra) {\n        temp.extra = {\n          field: extra.field,\n          unit: extra.unit\n        };\n      }\n\n      _this.setState(function (preState) {\n        return {\n          mapValues: _objectSpread({}, preState.mapValues, _defineProperty({}, targetValue, temp))\n        };\n      });\n    };\n\n    _this.makeMapFile = function () {\n      var blob = new Blob([mapPrinter(_this.state.mapValues)], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"testfile1.txt\");\n      ;\n    };\n\n    _this.setDateFormatting = function (dateFormat) {\n      _this.setState(function (prevState) {\n        return {\n          mapValues: _objectSpread({}, _this.state.mapValues, {\n            userDateFormat: dateFormat\n          })\n        };\n      });\n    };\n\n    _this.state = {\n      file: [],\n      fields: {},\n      mapValues: {},\n      sesarFields: fieldsDict // this.handleFileUpload = this.handleFileUpload.bind(this)\n      // this.renderfields = this.renderfields.bind(this);\n      // this.makeMapFile = this.makeMapFile.bind(this);\n      // // this.decoupleOldUserFieldsMapValues = this.decoupleOldUserFieldsMapValues.bind(this)\n      // this.addToBeMapped = this.addToBeMapped.bind(this);\n      // this.setUserField = this.setUserField.bind(this);\n      // // this.disableUserField = this.disableUserField.bind(this);\n      // this.disableSesarField = this.disableSesarField.bind(this);\n      // this.changeFormat = this.changeFormat.bind(this);\n      // this.setDateFormatting=this.setDateFormatting.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(MapBuilder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"STATE\", this.state.sesarFields);\n      return React.createElement(\"div\", {\n        style: {\n          margin: \"20px\",\n          \"margin-top\": \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(DefaultInfo, {\n        setDateFormatting: this.setDateFormatting,\n        userFields: this.state.fields,\n        setUnit: this.setUnit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"fileBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"fileinput\", React.createElement(\"input\", {\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.handleFileUpload(event.target.files);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      })), this.renderfields(), React.createElement(\"button\", {\n        onClick: this.makeMapFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \" Create Map File\"));\n    }\n  }]);\n\n  return MapBuilder;\n}(Component);\n\nexport default MapBuilder;","map":{"version":3,"sources":["/home/meagangould/Desktop/MarsMapMaker/src/components/MapBuilder.js"],"names":["React","Component","connect","readToText","fileTextToState","fieldsDict","saveAs","mapPrinter","XRenderFormats","kallBack","FORMAT_M21","FORMAT_121","DefaultInfo","text","newtext","split","MapBuilder","props","handleFileUpload","e","setState","file","state","fileContents","fields","decoupleOldUserFieldsMapValues","oldUserFields","currentMapping","editedCurrentMapping","temp","userValues","each","indexOf","push","enableUserField","oldUserField","newFields","console","log","disabled","mappedTo","disableSesarField","sesarFields","selectedField","enableSesarField","oldField","format","addToBeMapped","userField","sesarValues","mapValues","sesarField","concat","setUserField","changeFormat","newFormat","target","value","stateObject","preState","currentMapValueFields","oldVal","removeMapValue","newMapValues","renderfields","userFields","Object","keys","callBack","newSesarFields","userFieldsToEnable","multiCallBack","oldValues","length","entries","map","fieldName","addConversionValue","defaultUnit","setUnit","unit","targetValue","extra","field","makeMapFile","blob","Blob","type","setDateFormatting","dateFormat","prevState","userDateFormat","margin","event","files"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {readToText} from \"./BuilderComponents/Helpers/FileHelpers\"\nimport {fileTextToState} from \"./BuilderComponents/Helpers/FileHelpers\"\nimport './css/MapBuilder.css'\nimport  {fieldsDict}  from \"./BuilderComponents/Helpers/fieldsDict.jsx\"\n\nimport saveAs from 'file-saver';\nimport mapPrinter from \"./BuilderComponents/Main/mapPrinter\"\nimport XRenderFormats from \"./BuilderComponents/Main/XRenderFormats\"\nimport {kallBack,FORMAT_M21,FORMAT_121} from \"./BuilderComponents/Helpers/FileHelpers\";\nimport DefaultInfo from \"./BuilderComponents/Main/DefaultInfo\";\n\n\nvar text = \"original_archive,current archive,platform_name,cruise_field_prgrm,name,collection_method,collection_start_date,collection_end_date,latitude,latitude_end,longitude,longitude_end,elevation,elevation_end,size,size_unit CM IS COMMON,,collector,primary_location_type,igsn,,sample_comment,,field_name KEYED LIST,sample description,geological_age,age (min)MA,age (max)MA,sample_comment,classification,sample description,sample_type\"\n\nvar newtext = text.split(\",\");\n\n\nclass MapBuilder extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: [], fields: {}, mapValues: {}, sesarFields:fieldsDict,\n        }\n\n        // this.handleFileUpload = this.handleFileUpload.bind(this)\n        // this.renderfields = this.renderfields.bind(this);\n        // this.makeMapFile = this.makeMapFile.bind(this);\n        // // this.decoupleOldUserFieldsMapValues = this.decoupleOldUserFieldsMapValues.bind(this)\n        // this.addToBeMapped = this.addToBeMapped.bind(this);\n        // this.setUserField = this.setUserField.bind(this);\n        // // this.disableUserField = this.disableUserField.bind(this);\n        // this.disableSesarField = this.disableSesarField.bind(this);\n        // this.changeFormat = this.changeFormat.bind(this);\n        // this.setDateFormatting=this.setDateFormatting.bind(this);\n    }\n\n\n        handleFileUpload= async (e) =>{\n        //console.log(\"e\", e)\n        await this.setState({file: e[0]})\n        //console.log(\"state: \", this.state.file)\n\n        const fileContents = await readToText(this.state.file)\n        // console.log(\"fc:\", fileContents);\n\n\n        this.setState({fields:await fileTextToState(fileContents)})\n\n    }\n\n\n\n\n\n\n    decoupleOldUserFieldsMapValues=(oldUserFields,currentMapping)=>{\n        var editedCurrentMapping=  currentMapping ;\n        var temp = []\n        //console.log(\"uf\",oldUserFields)\n        //console.log(\"curr\",currentMapping)\n        if(typeof editedCurrentMapping.userValues != \"string\") {\n            for (var each of editedCurrentMapping.userValues) {\n\n                if (oldUserFields.indexOf(each) < 0)\n                    temp.push(each)\n            }\n        }else {\n            if(oldUserFields.indexOf(currentMapping.userValues) < 0)\n                temp.push(currentMapping.userValues)\n        }\n\n        //console.log(\"decoupled\",oldUserFields,\"now \",temp)\n        return {...editedCurrentMapping, userValues:temp}\n\n    }\n\n\n    // disableUserField=(userField)=>{\n    //     console.log(\"disuser field\", userField)\n    //     if(typeof userField === \"string\") {\n    //         var copy = this.state.fields[userField];\n    //         copy.disabled = true;\n    //         this.setState(preState => ({\n    //             fields: {\n    //                 ...this.state.fields,\n    //                 userField: copy\n    //             }\n    //         }))\n    //         return\n    //     } else {\n    //         console.log(\"disuser ruhroh\")\n    //         var copy = {...this.state.fields};\n    //         (userField).map(each => {\n    //             copy[each].disabled = !copy[each].disabled\n    //         });\n    //         this.setState({fields:{...copy}})\n    //     }\n    // }\n\n    enableUserField=(oldUserField,newFields)=>{\n        console.log(\"enable field\", oldUserField)\n\n        var temp= newFields\n\n        if(typeof oldUserField === \"string\") {\n            temp[oldUserField].disabled = false;\n            delete temp[oldUserField].mappedTo;\n\n        } else {\n            console.log(\"ensuser ruhroh\")\n            for (var each of oldUserField){\n                temp[each].disabled = false;\n                delete temp[each].mappedTo\n            };\n\n        }\n        return temp;\n    }\n\n\n    disableSesarField=(e)=>{\n        console.log(\"TD:\", e)\n            var temp = {...this.state.sesarFields};\n        if(e.selectedField) {\n            temp[e.selectedField].disabled = true\n        }\n            return temp;\n\n    }\n\n    enableSesarField=(oldField,sesarFields)=>{\n        var temp = sesarFields;\n        temp[oldField].disabled = false;\n\n        if(temp[oldField].format === FORMAT_M21){\n            temp[oldField].format = FORMAT_121;\n        }\n\n        temp[oldField].disabled = false;\n        return temp;\n    }\n\n    addToBeMapped=(userField,sesarValues,format)=>{\n\n        if(sesarValues.selectedField!== null) {\n            var temp = {};\n            console.log(\"mapdebug\", this.state.mapValues[sesarValues.selectedField])\n            if (!this.state.mapValues[sesarValues.selectedField]) {\n\n                temp.userValues = [userField];\n                temp.sesarField = sesarValues.selectedField;\n                temp.format = format;\n            }\n            // console.log(\"the set StatePiece\",this.state)\n\n            else {\n                temp = this.state.mapValues[sesarValues.selectedField];\n                console.log(\"dastemp\", temp)\n                for (var each of userField) {\n                    if (temp.userValues.indexOf(each) < 0)\n                        temp.userValues = temp.userValues.concat(each);\n                }\n\n                temp.sesarField = sesarValues.selectedField;\n                temp.format = format;\n            }\n\n            console.log(\"returning state\", {...this.state.mapValues}, \"temp:\", temp)\n            return {...this.state.mapValues, [sesarValues.selectedField]: temp};\n        }\n        else return {...this.state.mapValues}\n    };\n\n\n\n    /*sets userFields with property mappedTo which is the sesarField it is mapped to\n*   usefull for handeling reselection and validating if a particular option field should have access to reassign its mapped values*/\n        setUserField=(userField, sesarValues)=>{\n        console.log(\"set user field\", userField, \"set mappval\", sesarValues);\n\n        var temp = {...this.state.fields} //(this.state.fields[each].mappedTo != null) ? (this.state.fields[userField].mappedTo) : [];\n\n\n        if (typeof userField != \"string\") {\n            for (var each of userField) {\n\n                if (sesarValues) {\n                    temp[each].mappedTo = sesarValues.selectedField;\n                    temp[each].disabled = true;\n                }\n\n                else {\n                    temp[each].disabled = !temp[each].disabled;\n                    delete temp[each].mappedTo;\n                }\n            }\n        }\n        else {//is string\n            if(sesarValues){\n                temp[userField].mappedTo = sesarValues.selectedField;\n                temp[userField].disabled = true;}\n            else {\n                temp[userField].disabled = ! temp[userField].disabled;\n                delete temp[userField].mappedTo  ;}\n        }\n\n        return temp;\n    }\n\n\n\n    changeFormat=(e,sesarField)=>{\n        var sesarFields = this.state.sesarFields;\n        var newFormat = e.target.value;\n\n        if (newFormat !== sesarFields[sesarField].format) {\n            var stateObject = sesarFields[sesarField];\n            stateObject.format = newFormat;\n            this.setState(preState => ({\n                sesarFields: {...sesarFields,\n                    [sesarField]: stateObject }\n\n            } ) )\n        }\n    }\n\n        currentMapValueFields=(oldVal)=>{return (this.state.mapValues[oldVal].userValues)};\n\n        removeMapValue = (oldVal,newMapValues)=>{\n            let temp = newMapValues;\n\n            delete temp[oldVal]\n            console.log(\"TEMP DELETE\", temp)\n            return (temp)\n        };\n\n    renderfields=()=> {\n\n        var userFields = Object.keys(this.state.fields);\n\n\n        // var testFields = {name: {sesarName: \"name\", fieldFormat: \"one2one\", userValues: null},\n        //     collection_start_date: {sesarName: \"collection_start_date\", fieldFormat: \"dateFormat\", userValues: null},\n        //     size: {sesarName: \"size\", fieldFormat: \"conversion\", userValues: null},\n        //     sample_description: {sesarName: \"sample_description\", fieldFormat: \"multi2one\", userValues: null}}\n\n\n\n        let callBack =(sesarValues,userField,format,oldField)=> { //on button click toggles disable for option and sets mapping variable\n            console.log(\"kallbacking\", sesarValues, \"uf\", userField, \"form\", format)\n            let newSesarFields = this.disableSesarField(sesarValues); //returns state.sesarFields\n            let newMapValues = this.addToBeMapped(userField, sesarValues, format); //returns state.mapValues\n            console.log(\"new map values\",newMapValues)\n            let newFields = this.setUserField(userField, sesarValues); //returns state.fields\n\n            if(oldField !== null ) {\n                console.log(\"made it!\")\n                let userFieldsToEnable = this.currentMapValueFields(oldField);\n                newFields = this.enableUserField(userFieldsToEnable,newFields);\n                newSesarFields = this.enableSesarField(oldField,newSesarFields);\n                newMapValues = this.removeMapValue(oldField,newMapValues);\n\n            }\n\n\n            this.setState(preState => ({\n                fields: newFields,\n                sesarFields:  newSesarFields,\n                mapValues : newMapValues //{...preState.mapValues, [sesarValues.selectedField]: newMapValue}\n            }))\n        };\n\n        var multiCallBack=(sesarValues,userField,format,oldValues)=> { //on button click toggles disable for option and sets mapping variable\n            console.log(\"kallbacking\", sesarValues, \"uf\", userField, \"form\", format)\n\n            //sets mappedTo in new fields\n            let newFields = this.setUserField(userField, sesarValues); //returns state.fields\n            // adds new MapValues\n            let newMapValues = this.addToBeMapped(userField, sesarValues, format); //returns state.mapValues\n            //sets values no longer selected to not disabled and no mapped to\n            newFields = this.enableUserField(oldValues,newFields)\n            // removes oldvalues from MappingValues\n            newMapValues = this.decoupleOldUserFieldsMapValues(oldValues,newMapValues[sesarValues.selectedField])\n\n\n\n            this.setState(preState => ({\n                fields: newFields,\n                mapValues : {...preState.mapValues, [sesarValues.selectedField]: newMapValues}\n            }))\n        };\n\n        \n        if (userFields.length > 0) {\n            return Object.entries(this.state.fields).map(([each, value]) => { //each is the sesar field object\n               // console.log(\"renderformats\",value)\n                return <div> <XRenderFormats\n                                key={\"RF-\"+each}\n                                userField={{fieldName:each,...value}}\n                                sesarFields={this.state.sesarFields}\n                                              allUserFields={this.state.fields} decouple={this.decoupleOldUserFieldsMapValues}\n                                 callBack={callBack} multiCallBack={multiCallBack} changeFormat={this.changeFormat}\n                                    addConversionValue={this.addConversionValue}\n                                    defaultUnit={this.state.mapValues.defaultUnit}/> </div>\n\n            } )\n        }\n        return <div> >:)</div>\n    }\n\n    setUnit=(e)=>{ let unit = e.target.value;\n        this.setState(preState => ({mapValues : {...preState.mapValues, defaultUnit : unit }}) )};\n\n    addConversionValue = (targetValue,extra ) => {\n        let temp = this.state.mapValues[targetValue]\n\n        if(extra){temp.extra = {field: extra.field , unit : extra.unit}}\n\n        this.setState(preState =>({mapValues : { ...preState.mapValues , [targetValue]: temp  } }))\n    }\n\n/*############ Takes in state of generated mapValues and produces  .js map file*/\n makeMapFile=()=>{\n     var blob = new Blob([ mapPrinter(this.state.mapValues)], {type: \"text/plain;charset=utf-8\"});\n     saveAs(blob, \"testfile1.txt\");\n    ;\n }\n\n setDateFormatting=(dateFormat)=>{this.setState(prevState =>({ mapValues : {...this.state.mapValues, userDateFormat:dateFormat}}))}\n\n    render() {\n\n\n        console.log(\"STATE\",this.state.sesarFields)\n        return (\n\n            <div style={{margin:\"20px\",\"margin-top\":\"50px\"}}>\n\n                <div>\n                    <DefaultInfo setDateFormatting={this.setDateFormatting}\n                                 userFields={this.state.fields}\n                                    setUnit={this.setUnit}/>\n\n                </div>\n                <div className=\"fileBtn\">\n                fileinput\n                <input type=\"file\" onChange={event => this.handleFileUpload(event.target.files)}/>\n                </div>\n                    {this.renderfields()}\n\n                <button onClick={this.makeMapFile} > Create Map File</button>\n            </div>\n        )\n    }\n}\n\n\n\nexport default (MapBuilder);\n"]},"metadata":{},"sourceType":"module"}