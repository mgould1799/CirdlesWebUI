{"ast":null,"code":"import _slicedToArray from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/meagangould/Desktop/MarsMapMaker/src/components/BuilderComponents/Helpers/renderSelectOptions.js\";\nimport React from \"react\";\nimport XRenderFormats from \"../Main/XRenderFormats\";\nexport var allowedMulti = [\"sample_comment\", \"sample_description\", \"field_name\"];\n\nvar defined = function defined(value) {\n  return \" Ex : \" + (value.exampleValue != \"\" ? value.exampleValue : \"undefined\");\n}; //from XRenderFormats\n\n\nexport var firstMapOptions = function firstMapOptions(sesarFields, currentField) {\n  var allChoices = Object.entries(sesarFields).map( //iterates through all sesar fields to propagate options\n  function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        field = _ref2[0],\n        value = _ref2[1];\n\n    if (!value.mappedTo == null || value.mappedTo === currentField) return React.createElement(\"option\", {\n      className: \"tooltip\",\n      title: value.message,\n      id: field,\n      key: \"SO\" + field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" \", field, \" \");else return React.createElement(\"option\", {\n      className: \"tooltip\",\n      title: value.message,\n      id: field,\n      disabled: value.disabled,\n      key: \"SO\" + field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" \", field, \" \");\n  }); // react renders array of elements\n\n  return [React.createElement(\"option\", {\n    id: \"nothing\",\n    value: \"NULL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"SELECT SESAR FIELD\")].concat(allChoices);\n}; // from ConversionField\n\nexport var conversionUserOptions = function conversionUserOptions(allUserFields) {\n  var allChoices = Object.entries(allUserFields).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    if (!value.disabled) return React.createElement(\"option\", {\n      className: \"tooltip\",\n      title: value.exampleValue,\n      id: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, key);else return React.createElement(\"option\", {\n      className: \"tooltip\",\n      title: value.exampleValue,\n      id: key,\n      disabled: value.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, key);\n  });\n  return [React.createElement(\"option\", {\n    id: \"NULL\",\n    value: \"NULL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"SELECT FIELD\")].concat(allChoices);\n}; //from MultiToOne\n//NULL         //sample_comment\n\nexport var toggledUserOptions = function toggledUserOptions(allUserFields, selectedField, originField) {\n  var allChoices = Object.entries(allUserFields).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        value = _ref6[1];\n\n    //if available?\n    if (!value.disabled) return React.createElement(\"option\", {\n      className: \"\",\n      title: value.exampleValue,\n      id: key,\n      key: \"UF\" + key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" \", key); //if selected by self\n\n    if (value.disabled === true && key === selectedField) // || key === originField )\n      return React.createElement(\"option\", {\n        className: \"\",\n        title: value.exampleValue,\n        id: key,\n        key: \"UF\" + key,\n        selected: \"selected\",\n        disabled: value.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, key); //selected elsewhere\n    else if (value.disabled === true && key !== selectedField) {\n        return React.createElement(\"option\", {\n          className: \"\",\n          title: value.exampleValue,\n          id: key,\n          key: \"UF\" + key,\n          disabled: value.disabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, key);\n      } //origin field\n    //     else return( <option   className=\"\" title={value.exampleValue}\n    //                       id={key} key={\"UF\" + key}\n    //                       style={{color:\"red\"}} >\n    //\n    //                       {key}</option>)\n  }); // react renders array of elements\n\n  return [React.createElement(\"option\", {\n    id: \"nothing\",\n    value: \"NULL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"SELECT FIELD\")].concat(allChoices);\n}; //from DefaultInfo\n\nexport var defaultInfoOptions = function defaultInfoOptions(allUserFields) {\n  return Object.entries(allUserFields).map(function (_ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        key = _ref8[0],\n        value = _ref8[1];\n\n    console.log(\"key\", key, \"value\", value);\n    return React.createElement(\"option\", {\n      className: \"tooltip\",\n      title: value.exampleValue,\n      id: key,\n      value: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, key + \" \", \" \");\n  });\n};","map":{"version":3,"sources":["/home/meagangould/Desktop/MarsMapMaker/src/components/BuilderComponents/Helpers/renderSelectOptions.js"],"names":["React","XRenderFormats","allowedMulti","defined","value","exampleValue","firstMapOptions","sesarFields","currentField","allChoices","Object","entries","map","field","mappedTo","message","disabled","concat","conversionUserOptions","allUserFields","key","toggledUserOptions","selectedField","originField","defaultInfoOptions","console","log"],"mappings":"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","sourcesContent":["\n\nimport React from \"react\";\nimport XRenderFormats from \"../Main/XRenderFormats\";\n\nexport let allowedMulti = [\"sample_comment\",\"sample_description\",\"field_name\"];\n\nvar defined = (value) => \" Ex : \"+(value.exampleValue!=\"\"?value.exampleValue:\"undefined\")\n\n//from XRenderFormats\nexport let firstMapOptions = (sesarFields,currentField) =>{\n    const allChoices = Object.entries(sesarFields).map( //iterates through all sesar fields to propagate options\n        ([field, value]) =>{\n            if (!value.mappedTo == null || value.mappedTo === currentField) return (\n                <option className=\"tooltip\" title={value.message} id={field} key={\"SO\" + field} > {field} </option>\n            );\n            else return (\n                <option  className=\"tooltip\" title={value.message} id={field}  disabled={value.disabled} key={\"SO\" + field}> {field} </option>\n            )\n        });\n\n    // react renders array of elements\n    return [<option id=\"nothing\" value={\"NULL\"}>{\"SELECT SESAR FIELD\"}</option>].concat(allChoices);\n};\n\n\n\n// from ConversionField\n\nexport let conversionUserOptions = allUserFields => {\n    var allChoices = Object.entries(allUserFields).map(\n        ([key, value]) => {\n            if (!value.disabled) return (\n                <option className=\"tooltip\" title={value.exampleValue} id={key}>\n                    {key}</option>)\n            else return (\n                <option className=\"tooltip\" title={value.exampleValue}\n                        id={key} disabled={value.disabled}>\n                    {key}</option>\n            )\n        });\n    return [<option id=\"NULL\" value={\"NULL\"}>{\"SELECT FIELD\"}</option>].concat(allChoices);\n}\n\n//from MultiToOne\n                                                //NULL         //sample_comment\nexport let toggledUserOptions = (allUserFields, selectedField,originField) =>{\n   var allChoices =  Object.entries(allUserFields).map(\n    ([key, value]) =>{\n        //if available?\n        if (!value.disabled)\n            return ( <option className=\"\" title={value.exampleValue}\n                             id={key} key={\"UF\" + key}  > {key}</option>);\n        //if selected by self\n        if(((value.disabled === true) && (key === selectedField )) )\n            // || key === originField )\n            return ( <option   className=\"\" title={value.exampleValue}\n                                id={key} key={\"UF\" + key}\n                               selected={\"selected\"}\n                               disabled={value.disabled} >\n\n                               {key}</option>);\n        //selected elsewhere\n        else if(((value.disabled === true) && (key !== selectedField )) ){\n            return ( <option   className=\"\" title={value.exampleValue}\n                               id={key} key={\"UF\" + key}\n\n                               disabled={value.disabled} >\n\n                {key}</option>);\n            }\n        //origin field\n        //     else return( <option   className=\"\" title={value.exampleValue}\n        //                       id={key} key={\"UF\" + key}\n        //                       style={{color:\"red\"}} >\n        //\n        //                       {key}</option>)\n    });\n\n        // react renders array of elements\n        return [<option id=\"nothing\" value={\"NULL\"}>{\"SELECT FIELD\"}</option>].concat(allChoices);\n}\n\n//from DefaultInfo\n\nexport let defaultInfoOptions=(allUserFields)=> {\n    return Object.entries(allUserFields).map(([key, value]) =>{\n        console.log(\"key\",key,\"value\",value)\n        return( <option  className=\"tooltip\" title={value.exampleValue} id={key}  value={key} >\n            {key+\" \"} </option>)\n    });\n};"]},"metadata":{},"sourceType":"module"}