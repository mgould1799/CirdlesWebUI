{"ast":null,"code":"import _defineProperty from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/meagangould/Desktop/MarsMapMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FORMAT_121, FORMAT_M21 } from \"./FileHelpers\";\nexport var decoupleOldUserFieldsMapValues = function decoupleOldUserFieldsMapValues(oldUserFields, currentMapping) {\n  var editedCurrentMapping = currentMapping;\n\n  if (oldUserFields) {\n    var temp = [];\n    console.log(\"uf\", oldUserFields);\n    console.log(\"curr\", currentMapping);\n\n    if (typeof editedCurrentMapping.userValues != \"string\") {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = editedCurrentMapping.userValues[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var each = _step.value;\n          console.log(each);\n          if (oldUserFields.indexOf(each) < 0) temp.push(each);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } else {\n      if (oldUserFields.indexOf(currentMapping.userValues) < 0) temp.push(currentMapping.userValues);\n    }\n\n    console.log(\"decoupled\", oldUserFields, \"now \", temp);\n    return _objectSpread({}, editedCurrentMapping, {\n      userValues: temp\n    });\n  } else return editedCurrentMapping;\n}; // disableUserField=(userField)=>{\n//     console.log(\"disuser field\", userField)\n//     if(typeof userField === \"string\") {\n//         var copy = this.state.fields[userField];\n//         copy.disabled = true;\n//         this.setState(preState => ({\n//             fields: {\n//                 ...this.state.fields,\n//                 userField: copy\n//             }\n//         }))\n//         return\n//     } else {\n//         console.log(\"disuser ruhroh\")\n//         var copy = {...this.state.fields};\n//         (userField).map(each => {\n//             copy[each].disabled = !copy[each].disabled\n//         });\n//         this.setState({fields:{...copy}})\n//     }\n// }\n//no statePiece needed\n\nexport var enableUserField = function enableUserField(oldUserField, newFields) {\n  console.log(\"enable user field\", oldUserField, newFields);\n  if (oldUserField === \"NULL\") return newFields;\n  var temp = newFields;\n\n  if (typeof oldUserField === \"string\") {\n    temp[oldUserField].disabled = false;\n    delete temp[oldUserField].mappedTo;\n  } else if (oldUserField) {\n    console.log(\"ensuser ruhroh\");\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = oldUserField[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var each = _step2.value;\n        temp[each].disabled = false;\n        delete temp[each].mappedTo;\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    ;\n  }\n\n  return temp;\n}; //statePiece = this.state.sesarFields\n\nexport var disableSesarField = function disableSesarField(statePiece, e) {\n  console.log(\"TD:\", e);\n\n  var temp = _objectSpread({}, statePiece);\n\n  if (e.selectedField) {\n    temp[e.selectedField].disabled = true;\n  }\n\n  return temp;\n};\nexport var enableSesarField = function enableSesarField(oldField, sesarFields) {\n  var temp = sesarFields;\n  temp[oldField].disabled = false;\n\n  if (temp[oldField].format === FORMAT_M21) {\n    temp[oldField].format = FORMAT_121;\n  }\n\n  temp[oldField].disabled = false;\n  return temp;\n}; //statePiece = this.state.mapValues\n\nexport var addToBeMapped = function addToBeMapped(statePiece, userField, sesarValues, format) {\n  if (sesarValues.selectedField !== null) {\n    var temp = {}; // console.log(\"mapdebug\", statePiece)\n\n    if (!statePiece[sesarValues.selectedField]) {\n      temp.userValues = [userField];\n      temp.sesarField = sesarValues.selectedField;\n      temp.format = format;\n    } // console.log(\"the set StatePiece\",this.state)\n    else {\n        temp = statePiece[sesarValues.selectedField]; // console.log(\"dastemp\", temp)\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = userField[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var each = _step3.value;\n            if (temp.userValues.indexOf(each) < 0) temp.userValues = temp.userValues.concat(each);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        temp.sesarField = sesarValues.selectedField;\n        temp.format = format;\n      }\n\n    console.log(\"returning state\", _objectSpread({}, statePiece), \"temp:\", temp);\n    return _objectSpread({}, statePiece, _defineProperty({}, sesarValues.selectedField, temp));\n  } else return _objectSpread({}, statePiece);\n};\n/*sets userFields with property mappedTo which is the sesarField it is mapped to\n*   usefull for handeling reselection and validating if a particular option field should have access to reassign its mapped values*/\n//statePiece= this.state.fields\n\nexport var setUserField = function setUserField(statePiece, userField, sesarValues) {\n  console.log(\"set user field\", userField, \"set mappval\", sesarValues);\n\n  var temp = _objectSpread({}, statePiece); //(this.state.fields[each].mappedTo != null) ? (this.state.fields[userField].mappedTo) : [];\n\n\n  var XUnit = statePiece[userField];\n\n  if (typeof userField != \"string\") {\n    console.log(\"not string\");\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = userField[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var each = _step4.value;\n\n        if (sesarValues && each !== \"NULL\") {\n          console.log(\"1\");\n          temp[each].mappedTo = sesarValues.selectedField;\n          temp[each].disabled = true;\n        } else if (!sesarValues && each !== \"NULL\") {\n          console.log(\"2\");\n          temp[each].disabled = !temp[each].disabled;\n          delete temp[each].mappedTo;\n        }\n\n        if (each === \"NULL\") {\n          console.log(\"3\");\n        }\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  } else {\n    //is string\n    console.log(\"is string\");\n    console.log(XUnit);\n\n    if (sesarValues) {\n      if (XUnit.disabled === true) XUnit.disabled = false;\n      console.log(\"1\");\n      console.log(XUnit);\n      XUnit.disabled = true;\n      console.log(XUnit);\n      XUnit.mappedTo = sesarValues.selectedField;\n      console.log(XUnit);\n    } else {\n      console.log(\"2\");\n      temp[userField].disabled = !temp[userField].disabled;\n      delete temp[userField].mappedTo;\n    }\n  }\n\n  var returnTemp = _objectSpread({}, temp, _defineProperty({}, userField, XUnit));\n\n  console.log(\"set UF debug \", returnTemp);\n\n  if (userField[0] !== \"NULL\") {\n    return returnTemp;\n  } else return _objectSpread({}, temp);\n}; //statePiece not needed\n\nexport var removeMapValue = function removeMapValue(oldVal, newMapValues) {\n  var temp = newMapValues;\n  delete temp[oldVal];\n  console.log(\"TEMP DELETE\", temp);\n  return temp;\n};\nexport var replaceM21Null = function replaceM21Null(mapValues, sesarField, selectedValue, index) {\n  console.log(\"ReplaceM21 \\n mapValues:\", mapValues, \"sesarField:\", sesarField, \"SelectedValues\", selectedValue, \"index\", index);\n  var temp = mapValues;\n  var selectedField = sesarField.selectedField;\n  temp[selectedField].userValues[index] = selectedValue[0];\n  return temp;\n};\nexport var removeExtraM21Field = function removeExtraM21Field(mapValues, sesarField, selectedValue, index) {\n  console.log(\"RemoveM21 \\n mapValues:\", mapValues, \"sesarField:\", sesarField, \"SelectedValues\", selectedValue, \"index:\", index);\n  var temp = mapValues;\n\n  if (temp[sesarField].userValues[index] === selectedValue) {\n    temp[sesarField].userValues.splice(index, 1);\n  } else {\n    temp[sesarField].userValues.splice(index, 0, \"ERROR\");\n  }\n\n  return temp;\n};","map":{"version":3,"sources":["/home/meagangould/Desktop/MarsMapMaker/src/components/BuilderComponents/Helpers/CallBacks.js"],"names":["FORMAT_121","FORMAT_M21","decoupleOldUserFieldsMapValues","oldUserFields","currentMapping","editedCurrentMapping","temp","console","log","userValues","each","indexOf","push","enableUserField","oldUserField","newFields","disabled","mappedTo","disableSesarField","statePiece","e","selectedField","enableSesarField","oldField","sesarFields","format","addToBeMapped","userField","sesarValues","sesarField","concat","setUserField","XUnit","returnTemp","removeMapValue","oldVal","newMapValues","replaceM21Null","mapValues","selectedValue","index","removeExtraM21Field","splice"],"mappings":"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","sourcesContent":["import {FORMAT_121, FORMAT_M21} from \"./FileHelpers\";\n\n\n\nexport let decoupleOldUserFieldsMapValues=(oldUserFields,currentMapping)=>{\n    var editedCurrentMapping=  currentMapping ;\n   if(oldUserFields) {\n       var temp = []\n       console.log(\"uf\", oldUserFields)\n       console.log(\"curr\", currentMapping)\n       if (typeof editedCurrentMapping.userValues != \"string\") {\n           for (var each of editedCurrentMapping.userValues) {\n               console.log(each)\n               if (oldUserFields.indexOf(each) < 0)\n                   temp.push(each)\n           }\n       } else {\n           if (oldUserFields.indexOf(currentMapping.userValues) < 0)\n               temp.push(currentMapping.userValues)\n       }\n\n       console.log(\"decoupled\", oldUserFields, \"now \", temp)\n       return {...editedCurrentMapping, userValues: temp}\n   }\n   else return editedCurrentMapping;\n}\n\n\n// disableUserField=(userField)=>{\n//     console.log(\"disuser field\", userField)\n//     if(typeof userField === \"string\") {\n//         var copy = this.state.fields[userField];\n//         copy.disabled = true;\n//         this.setState(preState => ({\n//             fields: {\n//                 ...this.state.fields,\n//                 userField: copy\n//             }\n//         }))\n//         return\n//     } else {\n//         console.log(\"disuser ruhroh\")\n//         var copy = {...this.state.fields};\n//         (userField).map(each => {\n//             copy[each].disabled = !copy[each].disabled\n//         });\n//         this.setState({fields:{...copy}})\n//     }\n// }\n\n\n\n//no statePiece needed\nexport let enableUserField=(oldUserField,newFields)=>{\n    console.log(\"enable user field\", oldUserField, newFields)\n\n    if (oldUserField === \"NULL\") return newFields\n\n    var temp= newFields\n\n    if(typeof oldUserField === \"string\") {\n        temp[oldUserField].disabled = false;\n        delete temp[oldUserField].mappedTo;\n\n    } else if (oldUserField ) {\n        console.log(\"ensuser ruhroh\")\n        for (var each of oldUserField){\n            temp[each].disabled = false;\n            delete temp[each].mappedTo\n        };\n\n    }\n    return temp;\n}\n\n//statePiece = this.state.sesarFields\nexport let disableSesarField=(statePiece,e)=>{\n    console.log(\"TD:\", e)\n    var temp = {...statePiece};\n    if(e.selectedField) {\n        temp[e.selectedField].disabled = true\n    }\n    return temp;\n\n}\n\nexport let enableSesarField=(oldField,sesarFields)=>{\n    var temp = sesarFields;\n    temp[oldField].disabled = false;\n\n    if(temp[oldField].format === FORMAT_M21){\n        temp[oldField].format = FORMAT_121;\n    }\n\n    temp[oldField].disabled = false;\n    return temp;\n}\n\n//statePiece = this.state.mapValues\nexport let addToBeMapped=(statePiece,userField,sesarValues,format)=>{\n\n    if(sesarValues.selectedField!== null) {\n        var temp = {};\n        // console.log(\"mapdebug\", statePiece)\n        if (!statePiece[sesarValues.selectedField]) {\n\n            temp.userValues = [userField];\n            temp.sesarField = sesarValues.selectedField;\n            temp.format = format;\n        }\n        // console.log(\"the set StatePiece\",this.state)\n\n        else {\n            temp = statePiece[sesarValues.selectedField];\n            // console.log(\"dastemp\", temp)\n            for (var each of userField) {\n                    if (temp.userValues.indexOf(each) < 0)\n                    temp.userValues = temp.userValues.concat(each);\n            }\n\n            temp.sesarField = sesarValues.selectedField;\n            temp.format = format;\n        }\n\n        console.log(\"returning state\", {...statePiece}, \"temp:\", temp)\n        return {...statePiece, [sesarValues.selectedField]: temp};\n    }\n    else return {...statePiece}\n};\n\n\n/*sets userFields with property mappedTo which is the sesarField it is mapped to\n*   usefull for handeling reselection and validating if a particular option field should have access to reassign its mapped values*/\n//statePiece= this.state.fields\nexport let setUserField=(statePiece,userField, sesarValues)=>{\n    console.log(\"set user field\", userField, \"set mappval\", sesarValues);\n\n    var temp = {...statePiece} //(this.state.fields[each].mappedTo != null) ? (this.state.fields[userField].mappedTo) : [];\n    var XUnit = statePiece[userField]\n\n    if (typeof userField != \"string\") {\n        console.log(\"not string\")\n        for (var each of userField) {\n\n            if (sesarValues && each !== \"NULL\") {\n                console.log(\"1\")\n                temp[each].mappedTo = sesarValues.selectedField;\n                temp[each].disabled = true;\n            }\n\n\n            else if (!sesarValues && each !== \"NULL\"){\n                console.log(\"2\")\n                temp[each].disabled = !temp[each].disabled;\n                delete temp[each].mappedTo;\n            }\n\n            if (each === \"NULL\"){console.log(\"3\")}\n        }\n    }\n    else {//is string\n        console.log(\"is string\")\n        console.log(XUnit)\n\n        if(sesarValues){\n            if(XUnit.disabled === true) XUnit.disabled = false;\n            console.log(\"1\")\n            console.log(XUnit)\n\n            XUnit.disabled = true;\n            console.log(XUnit)\n            XUnit.mappedTo = sesarValues.selectedField\n            console.log(XUnit)\n    }\n\n        else {\n            console.log(\"2\")\n            temp[userField].disabled = ! temp[userField].disabled;\n            delete temp[userField].mappedTo  ;}\n    }\n   let  returnTemp = {...temp,[userField]:XUnit}\n    console.log(\"set UF debug \",returnTemp);\n  if(userField[0] !== \"NULL\") {\n      return returnTemp;\n  }\n  else\n      return{...temp}\n}\n\n\n\n\n\n//statePiece not needed\nexport let removeMapValue = (oldVal,newMapValues)=>{\n    let temp = newMapValues;\n\n    delete temp[oldVal]\n    console.log(\"TEMP DELETE\", temp)\n    return (temp)\n};\n\nexport let replaceM21Null =(mapValues,sesarField,selectedValue,index)=>{\n    console.log(\"ReplaceM21 \\n mapValues:\",mapValues,\"sesarField:\",sesarField,\"SelectedValues\",selectedValue, \"index\", index)\n    let temp = mapValues;\n    let selectedField =sesarField.selectedField ;\n    temp[selectedField].userValues[index] = selectedValue[0];\n    return temp;\n}\n\nexport let removeExtraM21Field = (mapValues,sesarField,selectedValue,index)=>{\n    console.log(\"RemoveM21 \\n mapValues:\",mapValues,\"sesarField:\",sesarField,\"SelectedValues\",selectedValue,\"index:\",index)\n    let temp = mapValues;\n\n    if(temp[sesarField].userValues[index] === selectedValue) {\n        temp[sesarField].userValues.splice(index, 1)\n    }\n    else{temp[sesarField].userValues.splice(index,0,\"ERROR\") }\n    return temp;\n}"]},"metadata":{},"sourceType":"module"}